{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../../src/index.ts","webpack:///external commonjs \"tslib\"","webpack:///../../src/decorators/index.ts","webpack:///../../src/decorators/crud.decorator.ts","webpack:///../../src/services/index.ts","webpack:///../../src/services/abstract-crud.service.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"lodash\"","webpack:///../../src/services/crud-config.service.ts","webpack:///../../src/helpers/index.ts","webpack:///../../src/helpers/checkers.helper.ts","webpack:///../../src/helpers/crud-validation.helper.ts","webpack:///../../src/enums/index.ts","webpack:///../../src/enums/crud-actions.enum.ts","webpack:///../../src/enums/crud-validation-groups.enum.ts","webpack:///external commonjs \"@nestjs/swagger\"","webpack:///external commonjs \"class-validator\"","webpack:///external commonjs \"class-transformer\"","webpack:///../../src/helpers/reflection.helper.ts","webpack:///external commonjs \"@nestjs/common/enums/route-paramtypes.enum\"","webpack:///external commonjs \"@nestjs/common/constants\"","webpack:///../../src/constants.ts","webpack:///../../src/helpers/request-validation.helper.ts","webpack:///../../src/exceptions/index.ts","webpack:///../../src/exceptions/request-query.exception.ts","webpack:///../../src/types/index.ts","webpack:///../../src/types/common.types.ts","webpack:///../../src/types/crud.types.ts","webpack:///../../src/types/request-param.types.ts","webpack:///../../src/types/request-query.types.ts","webpack:///../../src/helpers/serialize.helper.ts","webpack:///../../src/helpers/swagger.helper.ts","webpack:///../../src/helpers/safe-require.helper.ts","webpack:///../../src/helpers/ sync","webpack:///external commonjs \"@nestjs/swagger/dist/constants\"","webpack:///external commonjs \"pluralize\"","webpack:///external commonjs \"@nestjs/swagger/package.json\"","webpack:///../../src/services/query-builder.service.ts","webpack:///external commonjs \"qs\"","webpack:///external commonjs \"deepmerge\"","webpack:///../../src/services/query-parser.service.ts","webpack:///../../src/services/routes-factory.service.ts","webpack:///../../src/interceptors/index.ts","webpack:///../../src/interceptors/crud-request.interceptor.ts","webpack:///../../src/interceptors/crud-base.interceptor.ts","webpack:///../../src/interceptors/crud-response.interceptor.ts","webpack:///external commonjs \"rxjs/operators\"","webpack:///../../src/services/type-orm-crud.service.ts","webpack:///external commonjs \"@zmotivat0r/o0\"","webpack:///external commonjs \"typeorm\"","webpack:///../../src/decorators/crud-auth.decorator.ts","webpack:///../../src/decorators/override.decorator.ts","webpack:///../../src/decorators/parsed-request.decorator.ts","webpack:///../../src/decorators/parsed-body.decorator.ts","webpack:///../../src/decorators/feature-action.decorator.ts","webpack:///../../src/interfaces/index.ts","webpack:///../../src/interfaces/auth-options.interface.ts","webpack:///../../src/interfaces/base-route.interface.ts","webpack:///../../src/interfaces/create-many-dto.interface.ts","webpack:///../../src/interfaces/create-query-params.interface.ts","webpack:///../../src/interfaces/crud-controller.interface.ts","webpack:///../../src/interfaces/crud-global-config.interface.ts","webpack:///../../src/interfaces/crud-options.interface.ts","webpack:///../../src/interfaces/crud-request.interface.ts","webpack:///../../src/interfaces/dto-options.interface.ts","webpack:///../../src/interfaces/get-many-default-response.interface.ts","webpack:///../../src/interfaces/model-options.interface.ts","webpack:///../../src/interfaces/operators-options.interface.ts","webpack:///../../src/interfaces/params-options.interface.ts","webpack:///../../src/interfaces/parsed-request.interface.ts","webpack:///../../src/interfaces/query-options.interface.ts","webpack:///../../src/interfaces/request-query-builder-options.interface.ts","webpack:///../../src/interfaces/routes-options.interface.ts","webpack:///../../src/interfaces/serialize-options.interface.ts","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/user/user.module.ts","webpack:///external commonjs \"@nestjs/typeorm\"","webpack:///./src/app/user/user-email-already-exists.constraint.ts","webpack:///./src/app/user/user.service.ts","webpack:///./src/app/user/user.entity.ts","webpack:///external commonjs \"bcryptjs\"","webpack:///./src/app/address/address.entity.ts","webpack:///external commonjs \"typeorm/driver/mongodb/bson.typings\"","webpack:///./src/app/address/address-type.entity.ts","webpack:///./src/app/contract/contract.entity.ts","webpack:///./src/app/phone/phone.entity.ts","webpack:///./src/app/user/user.controller.ts","webpack:///./src/app/user/user.dto.ts","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"@nestjs/config\"","webpack:///./src/config/index.ts","webpack:///./src/config/database.config.ts","webpack:///./src/app/claims/claim.entity.ts","webpack:///./src/app/address/address.module.ts","webpack:///./src/app/address/address-type.service.ts","webpack:///./src/app/address/address.controller.ts","webpack:///./src/app/address/address.service.ts","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///./src/app/auth/auth.controller.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/constants.ts","webpack:///./src/app/auth/me.controller.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/claims/claim.module.ts","webpack:///./src/app/claims/claim.controller.ts","webpack:///./src/app/claims/claim.service.ts","webpack:///./src/app/contract/contract.module.ts","webpack:///./src/app/contract/contract.controller.ts","webpack:///./src/app/contract/contract.create.dto.ts","webpack:///./src/app/contract/contract.create.response.dto.ts","webpack:///./src/app/contract/contract.service.ts","webpack:///./src/app/phone/phone.module.ts","webpack:///./src/app/phone/phone.controller.ts","webpack:///./src/app/phone/phone.dto.ts","webpack:///./src/app/phone/phone.service.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./src/main.ts"],"sourcesContent":["export * from \"./decorators\";\nexport * from \"./constants\";\nexport * from \"./enums\";\nexport * from \"./exceptions\";\nexport * from \"./helpers\";\nexport * from \"./interceptors\";\nexport * from \"./interfaces\";\nexport * from \"./services\";\nexport * from \"./types\";\n","module.exports = require(\"tslib\");","export * from \"./crud.decorator\";\nexport * from \"./crud-auth.decorator\";\nexport * from \"./override.decorator\";\nexport * from \"./parsed-request.decorator\";\nexport * from \"./parsed-body.decorator\";\nexport * from \"./feature-action.decorator\";\n","import { RoutesFactoryService } from \"../services\";\nimport { CrudOptions } from \"../interfaces\";\n\nexport const Crud =\n  (options: CrudOptions) =>\n  (target: Object): void => {\n    const factoryMethod = options.routesFactory || RoutesFactoryService;\n    let factory: RoutesFactoryService = new factoryMethod(target, options);\n  };\n","export * from \"./abstract-crud.service\";\nexport * from \"./crud-config.service\";\nexport * from \"./query-builder.service\";\nexport * from \"./query-parser.service\";\nexport * from \"./routes-factory.service\";\nexport * from \"./type-orm-crud.service\";\n","import { BadRequestException, NotFoundException } from \"@nestjs/common\";\nimport { get, isEmpty, keys } from \"lodash\";\n\nimport {\n  CreateManyDto,\n  CrudRequest,\n  CrudRequestOptions,\n  GetManyDefaultResponse,\n  ParsedRequestParams,\n  QueryOptions,\n} from \"../interfaces\";\n\nexport abstract class CrudService<T, DTO = T> {\n  abstract getMany(req: CrudRequest): Promise<GetManyDefaultResponse<T> | T[]>;\n\n  abstract getOne(req: CrudRequest): Promise<T>;\n\n  abstract createOne(req: CrudRequest, dto: DTO): Promise<T>;\n\n  abstract createMany(req: CrudRequest, dto: CreateManyDto): Promise<T[]>;\n\n  abstract updateOne(req: CrudRequest, dto: DTO): Promise<T>;\n\n  abstract replaceOne(req: CrudRequest, dto: DTO): Promise<T>;\n\n  abstract deleteOne(req: CrudRequest): Promise<void | T>;\n\n  abstract recoverOne(req: CrudRequest): Promise<void | T>;\n\n  throwBadRequestException(msg?: any): BadRequestException {\n    throw new BadRequestException(msg);\n  }\n\n  throwNotFoundException(name: string): NotFoundException {\n    throw new NotFoundException(`${name} not found`);\n  }\n\n  /**\n   * Wrap page into page-info\n   * override this method to create custom page-info response\n   * or set custom `serialize.getMany` dto in the controller's CrudOption\n   * @param data\n   * @param total\n   * @param limit\n   * @param offset\n   */\n  createPageInfo(\n    data: T[],\n    total: number,\n    limit: number,\n    offset: number\n  ): GetManyDefaultResponse<T> {\n    return {\n      data,\n      count: data.length,\n      total,\n      page: limit ? Math.floor(offset / limit) + 1 : 1,\n      pageCount: limit && total ? Math.ceil(total / limit) : 1,\n    };\n  }\n\n  /**\n   * Determine if need paging\n   * @param parsed\n   * @param options\n   */\n  decidePagination(\n    parsed: ParsedRequestParams,\n    options: CrudRequestOptions\n  ): boolean {\n    return (\n      options.query?.alwaysPaginate ||\n      ((Number.isFinite(parsed.page) || Number.isFinite(parsed.offset)) &&\n        !!this.getTake(parsed, <QueryOptions>options.query))\n    );\n  }\n\n  /**\n   * Get number of resources to be fetched\n   * @param query\n   * @param options\n   */\n  getTake(query: ParsedRequestParams, options: QueryOptions): number | null {\n    if (query.limit) {\n      return options.maxLimit\n        ? query.limit <= options.maxLimit\n          ? query.limit\n          : options.maxLimit\n        : query.limit;\n    }\n    /* istanbul ignore if */\n    if (options.limit) {\n      return options.maxLimit\n        ? options.limit <= options.maxLimit\n          ? options.limit\n          : options.maxLimit\n        : options.limit;\n    }\n\n    return options.maxLimit ? options.maxLimit : null;\n  }\n\n  /**\n   * Get number of resources to be skipped\n   * @param query\n   * @param take\n   */\n  getSkip(query: ParsedRequestParams, take: number): number | null {\n    return query.page && take\n      ? take * (query.page - 1)\n      : query.offset\n      ? query.offset\n      : null;\n  }\n\n  /**\n   * Get primary param name from CrudOptions\n   * @param options\n   */\n  getPrimaryParams(options: CrudRequestOptions): string[] {\n    if (isEmpty(options.params)) {\n      return [];\n    }\n    // @ts-ignore\n    return keys(options.params)\n      .filter((n: string) => get(options, `params[${n}].primary`, false))\n      .map((p: string) => get(options, `params[${p}].field`));\n  }\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"lodash\");","import { isObjectFull } from \"../helpers\";\nimport { CrudGlobalConfig, RequestQueryBuilderOptions } from \"../interfaces\";\n\nimport { QueryBuilderService } from \"./query-builder.service\";\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst deepmerge = require('deepmerge');\n\nexport class CrudConfigService {\n  static config: CrudGlobalConfig = {\n    auth: {},\n    query: {\n      alwaysPaginate: false,\n    },\n    operators: {},\n    routes: {\n      getManyBase: { interceptors: [], decorators: [] },\n      getOneBase: { interceptors: [], decorators: [] },\n      createOneBase: { interceptors: [], decorators: [], returnShallow: false },\n      createManyBase: { interceptors: [], decorators: [] },\n      updateOneBase: {\n        interceptors: [],\n        decorators: [],\n        allowParamsOverride: false,\n        returnShallow: false,\n      },\n      replaceOneBase: {\n        interceptors: [],\n        decorators: [],\n        allowParamsOverride: false,\n        returnShallow: false,\n      },\n      deleteOneBase: { interceptors: [], decorators: [], returnDeleted: false },\n      recoverOneBase: {\n        interceptors: [],\n        decorators: [],\n        returnRecovered: false,\n      },\n    },\n    params: {},\n  };\n\n  static load(config: CrudGlobalConfig = {}): void {\n    const auth = isObjectFull(config.auth) ? config.auth : {};\n    const query = isObjectFull(config.query) ? config.query : {};\n    const routes = isObjectFull(config.routes) ? config.routes : {};\n    const operators = isObjectFull(config.operators) ? config.operators : {};\n    const params = isObjectFull(config.params) ? config.params : {};\n    const serialize = isObjectFull(config.serialize) ? config.serialize : {};\n\n    if (isObjectFull(config.queryParser)) {\n      QueryBuilderService.setOptions(<RequestQueryBuilderOptions>{\n        ...config.queryParser,\n      });\n    }\n\n    CrudConfigService.config = deepmerge(\n      CrudConfigService.config,\n      { auth, query, routes, operators, params, serialize },\n      // @ts-ignore\n      { arrayMerge: (destinationArray, sourceArray, _options) => sourceArray }\n    );\n  }\n}\n","export * from \"./checkers.helper\";\nexport * from \"./crud-validation.helper\";\nexport * from \"./reflection.helper\";\nexport * from \"./request-validation.helper\";\nexport * from \"./serialize.helper\";\nexport * from \"./swagger.helper\";\n","import {\n  every,\n  isEqual,\n  isArray,\n  isBoolean,\n  isDate,\n  isEmpty,\n  isNumber,\n  isString,\n  keys,\n  isNil,\n} from \"lodash\";\n\nexport const isArrayOfStrings = (arr: unknown[]): boolean => {\n  return isArray(arr) && every(arr, isString);\n};\nexport const isArrayFull = (val: any): boolean =>\n  Array.isArray(val) && !isEmpty(val);\n\nexport const isStringFull = (val: unknown): boolean =>\n  isString(val) && !isEmpty(val);\n\nexport const isArrayOfStringsFull = (val: any): boolean =>\n  isArrayFull(val) && (val as string[]).every((v: string) => isStringFull(v));\n\nexport const isValue = (val: any): boolean =>\n  isStringFull(val) || isNumber(val) || isBoolean(val) || isDate(val);\nexport const hasValue = (val: any): boolean =>\n  isArrayFull(val) ? (val as any[]).every((o) => isValue(o)) : isValue(val);\n\nexport const isDateString = (val: any): boolean => {\n  const timestamp: number = Date.parse(val);\n  return !isNaN(timestamp) && isDate(new Date(timestamp));\n};\n\nexport const isFalse = (val: any): boolean => val === false;\n\nexport const isTrue = (val: any): boolean => val === true;\n\nexport const isIn = (val: any, arr: any[] = []): boolean =>\n  arr.some((o) => isEqual(val, o));\n\nexport const isObject = (val: any): boolean =>\n  typeof val === \"object\" && !isNil(val);\nexport const isObjectFull = (val: any) => isObject(val) && keys(val).length > 0;\n","import { ValidationPipe } from \"@nestjs/common\";\nimport { isFalse } from \"../helpers\";\nimport { isNil } from \"lodash\";\nimport { CrudValidationGroups } from \"../enums\";\nimport { CreateManyDto, CrudOptions, MergedCrudOptions } from \"../interfaces\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, ArrayNotEmpty, ValidateNested } from \"class-validator\";\nimport { Type } from \"class-transformer\";\n\nexport class BulkDto<T> implements CreateManyDto<T> {\n  // @ts-ignore\n  bulk: T[];\n}\n\nexport const getValidationPipe = (\n  options: CrudOptions,\n  group?: CrudValidationGroups\n): ValidationPipe | undefined => {\n  return !isFalse(options.validation)\n    ? new ValidationPipe({\n        ...(options.validation || {}),\n        groups: group ? [group] : undefined,\n      })\n    : undefined;\n};\n\nexport const createBulkDto = <T = any>(options: MergedCrudOptions): any => {\n  if (!isFalse(options.validation)) {\n    const hasDto: boolean = !isNil(options.dto?.create);\n    const groups: CrudValidationGroups[] | undefined = !hasDto\n      ? [CrudValidationGroups.CREATE]\n      : undefined;\n    const always: boolean | undefined = hasDto ? true : undefined;\n    const Model = hasDto ? options.dto?.create : options.model.type;\n\n    class BulkDtoImpl implements CreateManyDto<T> {\n      @ApiProperty({ type: Model, isArray: true })\n      @IsArray({ groups, always })\n      @ArrayNotEmpty({ groups, always })\n      @ValidateNested({ each: true, groups, always })\n      @Type(() => Model)\n      // @ts-ignore\n      bulk: T[];\n    }\n\n    Object.defineProperty(BulkDtoImpl, \"name\", {\n      writable: false,\n      value: `CreateMany${options.model.type.name}Dto`,\n    });\n\n    return BulkDtoImpl;\n  } else {\n    return BulkDto;\n  }\n};\n","export * from \"./crud-actions.enum\";\nexport * from \"./crud-validation-groups.enum\";\n","export enum CrudActions {\n  ReadAll = \"Read-All\",\n  ReadOne = \"Read-One\",\n  CreateOne = \"Create-One\",\n  CreateMany = \"Create-Many\",\n  UpdateOne = \"Update-One\",\n  ReplaceOne = \"Replace-One\",\n  DeleteOne = \"Delete-One\",\n  DeleteAll = \"Delete-All\",\n  RecoverOne = \"Recover-One\",\n}\n","export enum CrudValidationGroups {\n  CREATE = \"CRUD-CREATE\",\n  UPDATE = \"CRUD-UPDATE\",\n}\n","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"class-validator\");","module.exports = require(\"class-transformer\");","import { RouteParamtypes } from \"@nestjs/common/enums/route-paramtypes.enum\";\nimport {\n  CUSTOM_ROUTE_ARGS_METADATA,\n  INTERCEPTORS_METADATA,\n  METHOD_METADATA,\n  PARAMTYPES_METADATA,\n  PATH_METADATA,\n  ROUTE_ARGS_METADATA,\n} from \"@nestjs/common/constants\";\nimport { ArgumentsHost } from \"@nestjs/common\";\nimport { isFunction } from \"lodash\";\nimport { BaseRoute, MergedCrudOptions, AuthOptions } from \"../interfaces\";\nimport { BaseRouteName } from \"../types\";\nimport {\n  CRUD_OPTIONS_METADATA,\n  ACTION_NAME_METADATA,\n  PARSED_CRUD_REQUEST_KEY,\n  PARSED_BODY_METADATA,\n  OVERRIDE_METHOD_METADATA,\n  CRUD_AUTH_OPTIONS_METADATA,\n} from \"../constants\";\nimport { CrudActions } from \"../enums\";\n\nexport class R {\n  static set(\n    metadataKey: any,\n    metadataValue: any,\n    target: Object,\n    propertyKey: string | symbol | undefined = undefined\n  ): void {\n    if (propertyKey) {\n      Reflect.defineMetadata(metadataKey, metadataValue, target, propertyKey);\n    } else {\n      Reflect.defineMetadata(metadataKey, metadataValue, target);\n    }\n  }\n\n  static get<T extends any>(\n    metadataKey: any,\n    target: Object,\n    propertyKey: string | symbol | undefined = undefined\n  ): T {\n    return propertyKey\n      ? Reflect.getMetadata(metadataKey, target, propertyKey)\n      : Reflect.getMetadata(metadataKey, target);\n  }\n\n  static createCustomRouteArg(\n    paramType: string,\n    index: number,\n    pipes: any[] = [],\n    data: any = undefined\n  ): any {\n    // @ts-ignore\n    return {\n      [`${paramType}${CUSTOM_ROUTE_ARGS_METADATA}:${index}`]: {\n        index,\n        factory: (_: any, ctx: ArgumentsHost) =>\n          R.getContextRequest(ctx)[paramType],\n        data,\n        pipes,\n      },\n    };\n  }\n\n  static createRouteArg(\n    paramTypes: RouteParamtypes,\n    index: number,\n    pipes: any[] = [],\n    data: any = undefined\n  ): any {\n    return {\n      [`${paramTypes}:${index}`]: {\n        index,\n        pipes,\n        data,\n      },\n    };\n  }\n\n  static setDecorators(\n    decorators: (PropertyDecorator | MethodDecorator)[],\n    target: object,\n    name: string\n  ): void {\n    // this makes metadata decorator works\n    const decoratedDescriptor: PropertyDescriptor = Reflect.decorate(\n      decorators,\n      target,\n      name,\n      Reflect.getOwnPropertyDescriptor(target, name)\n    );\n\n    // this makes proxy decorator works\n    Reflect.defineProperty(target, name, decoratedDescriptor);\n  }\n\n  static setParsedRequestArg(index: number) {\n    return R.createCustomRouteArg(PARSED_CRUD_REQUEST_KEY, index);\n  }\n\n  static setBodyArg(index: number, pipes: any[] = []) {\n    return R.createRouteArg(RouteParamtypes.BODY, index, pipes);\n  }\n\n  static setCrudOptions(options: MergedCrudOptions, target: any) {\n    R.set(CRUD_OPTIONS_METADATA, options, target);\n  }\n\n  static setRoute(route: BaseRoute, func: Function) {\n    R.set(PATH_METADATA, route.path, func);\n    R.set(METHOD_METADATA, route.method, func);\n  }\n\n  static setInterceptors(interceptors: any[], func: Function) {\n    R.set(INTERCEPTORS_METADATA, interceptors, func);\n  }\n\n  static setRouteArgs(metadata: any, target: any, name: string) {\n    R.set(ROUTE_ARGS_METADATA, metadata, target, name);\n  }\n\n  static setRouteArgsTypes(metadata: any, target: any, name: string) {\n    R.set(PARAMTYPES_METADATA, metadata, target, name);\n  }\n\n  static setAction(action: CrudActions, func: Function) {\n    R.set(ACTION_NAME_METADATA, action, func);\n  }\n\n  static setCrudAuthOptions(metadata: any, target: any) {\n    R.set(CRUD_AUTH_OPTIONS_METADATA, metadata, target);\n  }\n\n  static getCrudAuthOptions(target: any): AuthOptions {\n    return R.get(CRUD_AUTH_OPTIONS_METADATA, target);\n  }\n\n  static getCrudOptions(target: any): MergedCrudOptions {\n    return R.get(CRUD_OPTIONS_METADATA, target);\n  }\n\n  static getAction(func: Function): CrudActions {\n    return R.get(ACTION_NAME_METADATA, func);\n  }\n\n  static getOverrideRoute(func: Function): BaseRouteName {\n    return R.get(OVERRIDE_METHOD_METADATA, func);\n  }\n\n  static getInterceptors(func: Function): any[] {\n    return R.get(INTERCEPTORS_METADATA, func) || [];\n  }\n\n  static getRouteArgs(target: any, name: string): any {\n    return R.get(ROUTE_ARGS_METADATA, target, name);\n  }\n\n  static getRouteArgsTypes(target: any, name: string): any[] {\n    return R.get(PARAMTYPES_METADATA, target, name) || [];\n  }\n\n  static getParsedBody(func: Function): any {\n    return R.get(PARSED_BODY_METADATA, func);\n  }\n\n  static getContextRequest(ctx: ArgumentsHost): any {\n    return isFunction(ctx.switchToHttp) ? ctx.switchToHttp().getRequest() : ctx;\n  }\n}\n","module.exports = require(\"@nestjs/common/enums/route-paramtypes.enum\");","module.exports = require(\"@nestjs/common/constants\");","export const REQUEST_DELIM: string = \"||\";\nexport const REQUEST_DELIM_STR: string = \",\";\nexport const REQUEST_PREFIX_EXTRA: string = \"extra.\";\nexport const FEATURE_NAME_METADATA: string = \"CRUDX_FEATURE_NAME_METADATA\";\nexport const ACTION_NAME_METADATA: string = \"CRUDX_ACTION_NAME_METADATA\";\nexport const OVERRIDE_METHOD_METADATA: string =\n  \"CRUDX_OVERRIDE_METHOD_METADATA\";\nexport const PARSED_BODY_METADATA: string = \"CRUDX_PARSED_BODY_METADATA\";\nexport const PARSED_CRUD_REQUEST_KEY: string = \"CRUDX_PARSED_CRUD_REQUEST_KEY\";\nexport const CRUD_OPTIONS_METADATA: string = \"CRUDX_CRUD_OPTIONS_METADATA\";\nexport const CRUD_AUTH_OPTIONS_METADATA: string =\n  \"CRUDX_CRUD_AUTH_OPTIONS_METADATA\";\n","import { isEqual, isNil, isNumber, isObject, isUndefined, keys } from \"lodash\";\nimport { RequestQueryException } from \"../exceptions\";\nimport { CustomOperators, ParamOption, ParamsOptions } from \"../interfaces\";\n\nimport {\n  ComparisonOperator,\n  CondOperator,\n  QueryFields,\n  QueryFilter,\n  QueryJoin,\n  QuerySort,\n} from \"../types\";\n\nimport {\n  isArrayOfStrings,\n  isArrayOfStringsFull,\n  isStringFull,\n} from \"./checkers.helper\";\n\nexport const comparisonOperatorsList: string[] = [\n  ...keys(CondOperator).map(\n    (n: string) => CondOperator[n as keyof typeof CondOperator]\n  ),\n];\n\nexport const sortOrdersList: string[] = [\"ASC\", \"DESC\"];\n\nconst sortOrdersListStr: string = sortOrdersList.join();\n\nexport function validateFields(fields: QueryFields): void {\n  if (!isArrayOfStrings(fields)) {\n    throw new RequestQueryException(\n      \"Invalid fields. Array of strings expected\"\n    );\n  }\n}\n\nexport function validateCondition(\n  val: QueryFilter,\n  cond: \"filter\" | \"or\" | \"search\",\n  customOperators: CustomOperators\n): void {\n  if (!isObject(val) || !isStringFull(val.field)) {\n    throw new RequestQueryException(\n      `Invalid field type in ${cond} condition. String expected`\n    );\n  }\n  validateComparisonOperator(val.operator, customOperators);\n}\n\nexport function validateComparisonOperator(\n  operator: ComparisonOperator,\n  customOperators: CustomOperators = {}\n): void {\n  const extendedComparisonOperatorsList = [\n    ...comparisonOperatorsList,\n    ...Object.keys(customOperators),\n  ];\n  if (!extendedComparisonOperatorsList.includes(operator)) {\n    throw new RequestQueryException(\n      `Invalid comparison operator. ${extendedComparisonOperatorsList.join()} expected`\n    );\n  }\n}\n\nexport function validateJoin(join: QueryJoin): void {\n  if (!isObject(join) || !isStringFull(join.field)) {\n    throw new RequestQueryException(\"Invalid join field. String expected\");\n  }\n  if (!isUndefined(join.select) && !isArrayOfStringsFull(join.select)) {\n    throw new RequestQueryException(\n      \"Invalid join select. Array of strings expected\"\n    );\n  }\n}\n\nexport function validateSort(sort: QuerySort): void {\n  if (!isObject(sort) || !isStringFull(sort.field)) {\n    throw new RequestQueryException(\"Invalid sort field. String expected\");\n  }\n  if (\n    !isEqual(sort.order, sortOrdersList[0]) &&\n    !isEqual(sort.order, sortOrdersList[1])\n  ) {\n    throw new RequestQueryException(\n      `Invalid sort order. ${sortOrdersListStr} expected`\n    );\n  }\n}\n\nexport function validateNumeric(\n  val: number,\n  num: \"limit\" | \"offset\" | \"page\" | \"cache\" | \"include_deleted\" | string\n): void {\n  if (!isNumber(val)) {\n    throw new RequestQueryException(`Invalid ${num}. Number expected`);\n  }\n}\n\nexport function validateParamOption(\n  options: ParamsOptions,\n  name: string\n): void {\n  if (!isObject(options)) {\n    throw new RequestQueryException(\n      `Invalid param ${name}. Invalid crud options`\n    );\n  }\n  const option: ParamOption = options[name];\n  if (option && option.disabled) {\n    return;\n  }\n  if (!isObject(option) || isNil(option.field) || isNil(option.type)) {\n    throw new RequestQueryException(`Invalid param option in Crud`);\n  }\n}\n\nexport function validateUUID(str: string, name: string): void {\n  const uuid: RegExp =\n    /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n  const uuidV4: RegExp =\n    /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n  if (!uuidV4.test(str) && !uuid.test(str)) {\n    throw new RequestQueryException(\n      `Invalid param ${name}. UUID string expected`\n    );\n  }\n}\n","export * from \"./request-query.exception\";\n","export class RequestQueryException extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n","export * from \"./common.types\";\nexport * from \"./crud.types\";\nexport * from \"./request-param.types\";\nexport * from \"./request-query.types\";\n","export type ClassType<T> = {\n  new (...args: any[]): T;\n};\n\nexport type ObjectLiteral = {\n  [key: string]: any;\n};\n","import { SCondition, QueryFilter } from \"./request-query.types\";\n\nexport type BaseRouteName =\n  | \"getManyBase\"\n  | \"getOneBase\"\n  | \"createOneBase\"\n  | \"createManyBase\"\n  | \"updateOneBase\"\n  | \"replaceOneBase\"\n  | \"deleteOneBase\"\n  | \"recoverOneBase\";\n\nexport type QueryFilterFunction = (\n  search?: SCondition,\n  getMany?: boolean\n) => SCondition | void;\n\nexport type QueryFilterOption =\n  | QueryFilter[]\n  | SCondition\n  | QueryFilterFunction;\n","export type ParamOptionType = \"number\" | \"string\" | \"uuid\";\n","import { ObjectLiteral } from \"./common.types\";\n\nexport type QueryFields = string[];\n\nexport interface QueryFilter {\n  field: string;\n  operator: ComparisonOperator;\n  value?: any;\n}\n\nexport type QueryFilterArr = [string, ComparisonOperator, any?];\n\nexport interface QueryJoin {\n  field: string;\n  select?: QueryFields;\n}\n\nexport type QueryJoinArr = [string, QueryFields?];\n\nexport interface QuerySort {\n  field: string;\n  order: QuerySortOperator;\n}\n\n/** Extra object or null */\nexport type QueryExtra = ObjectLiteral | undefined;\n\nexport type QuerySortArr = [string, QuerySortOperator];\n\nexport type QuerySortOperator = \"ASC\" | \"DESC\";\n\nexport enum CondOperator {\n  EQUALS = \"$eq\",\n  NOT_EQUALS = \"$ne\",\n  GREATER_THAN = \"$gt\",\n  LOWER_THAN = \"$lt\",\n  GREATER_THAN_EQUALS = \"$gte\",\n  LOWER_THAN_EQUALS = \"$lte\",\n  STARTS = \"$starts\",\n  ENDS = \"$ends\",\n  CONTAINS = \"$cont\",\n  EXCLUDES = \"$excl\",\n  IN = \"$in\",\n  NOT_IN = \"$notin\",\n  IS_NULL = \"$isnull\",\n  NOT_NULL = \"$notnull\",\n  BETWEEN = \"$between\",\n  EQUALS_LOW = \"$eqL\",\n  NOT_EQUALS_LOW = \"$neL\",\n  STARTS_LOW = \"$startsL\",\n  ENDS_LOW = \"$endsL\",\n  CONTAINS_LOW = \"$contL\",\n  EXCLUDES_LOW = \"$exclL\",\n  IN_LOW = \"$inL\",\n  NOT_IN_LOW = \"$notinL\",\n}\n\nexport type ComparisonOperator = keyof SFieldOperator | string;\n\n// new search\nexport type SPrimitivesVal = string | number | boolean;\n\nexport type SFiledValues = SPrimitivesVal | SPrimitivesVal[];\n\nexport interface SFieldOperator {\n  $eq?: SFiledValues;\n  $ne?: SFiledValues;\n  $gt?: SFiledValues;\n  $lt?: SFiledValues;\n  $gte?: SFiledValues;\n  $lte?: SFiledValues;\n  $starts?: SFiledValues;\n  $ends?: SFiledValues;\n  $cont?: SFiledValues;\n  $excl?: SFiledValues;\n  $in?: SFiledValues;\n  $notin?: SFiledValues;\n  $between?: SFiledValues;\n  $isnull?: SFiledValues;\n  $notnull?: SFiledValues;\n  $eqL?: SFiledValues;\n  $neL?: SFiledValues;\n  $startsL?: SFiledValues;\n  $endsL?: SFiledValues;\n  $contL?: SFiledValues;\n  $exclL?: SFiledValues;\n  $inL?: SFiledValues;\n  $notinL?: SFiledValues;\n  $or?: SFieldOperator;\n  $and?: never;\n}\n\nexport type SField =\n  | SPrimitivesVal\n  | SFieldOperator\n  | { [$custom: string]: SFiledValues };\n\nexport interface SFields {\n  [key: string]: SField | Array<SFields | SConditionAND> | undefined;\n  $or?: Array<SFields | SConditionAND>;\n  $and?: never;\n}\n\nexport interface SConditionAND {\n  $and?: Array<SFields | SConditionAND>;\n  $or?: never;\n}\n\nexport type SConditionKey = \"$and\" | \"$or\";\n\nexport type SCondition = SFields | SConditionAND;\n","import { Type } from \"class-transformer\";\nimport { GetManyDefaultResponse } from \"../interfaces\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class SerializeHelper {\n  static createGetManyDto(dto: any, resourceName: string): any {\n    class GetManyResponseDto implements GetManyDefaultResponse<any> {\n      @ApiProperty({ type: dto, isArray: true })\n      @Type(() => dto)\n      // @ts-ignore\n      data: any[];\n\n      @ApiProperty({ type: \"number\" })\n      // @ts-ignore\n      count: number;\n\n      @ApiProperty({ type: \"number\" })\n      // @ts-ignore\n      total: number;\n\n      @ApiProperty({ type: \"number\" })\n      // @ts-ignore\n      page: number;\n\n      @ApiProperty({ type: \"number\" })\n      // @ts-ignore\n      pageCount: number;\n    }\n\n    Object.defineProperty(GetManyResponseDto, \"name\", {\n      writable: false,\n      value: `GetMany${resourceName}ResponseDto`,\n    });\n\n    return GetManyResponseDto;\n  }\n\n  static createGetOneResponseDto(resourceName: string): any {\n    class GetOneResponseDto {}\n\n    Object.defineProperty(GetOneResponseDto, \"name\", {\n      writable: false,\n      value: `${resourceName}ResponseDto`,\n    });\n\n    return GetOneResponseDto;\n  }\n}\n","import { HttpStatus } from \"@nestjs/common\";\nimport { QueryBuilderService } from \"../services\";\nimport { get, isArray, isString, keys } from \"lodash\";\nimport {\n  MergedCrudOptions,\n  ParamsOptions,\n  RequestQueryBuilderOptions,\n} from '../interfaces';\nimport { BaseRouteName } from '../types';\nimport { R } from './reflection.helper';\n\nimport { safeRequire } from './safe-require.helper';\nimport * as SWAGGER_CONSTANTS from '@nestjs/swagger/dist/constants';\nimport { getSchemaPath } from '@nestjs/swagger';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pluralize = require(\"pluralize\");\n\nexport const swaggerPkgJson = safeRequire(\"@nestjs/swagger/package.json\", () =>\n  require(\"@nestjs/swagger/package.json\")\n);\n\nexport class Swagger {\n  static operationsMap(modelName: string): { [key in BaseRouteName]: string } {\n    return {\n      getManyBase: `Retrieve multiple ${pluralize(modelName)}`,\n      getOneBase: `Retrieve a single ${modelName}`,\n      createManyBase: `Create multiple ${pluralize(modelName)}`,\n      createOneBase: `Create a single ${modelName}`,\n      updateOneBase: `Update a single ${modelName}`,\n      replaceOneBase: `Replace a single ${modelName}`,\n      deleteOneBase: `Delete a single ${modelName}`,\n      recoverOneBase: `Recover one ${modelName}`,\n    };\n  }\n\n  static setOperation(metadata: any, func: Function) {\n    if (SWAGGER_CONSTANTS) {\n      R.set(SWAGGER_CONSTANTS.DECORATORS.API_OPERATION, metadata, func);\n    }\n  }\n\n  static setParams(metadata: any, func: Function) {\n    /* istanbul ignore else */\n    if (SWAGGER_CONSTANTS) {\n      R.set(SWAGGER_CONSTANTS.DECORATORS.API_PARAMETERS, metadata, func);\n    }\n  }\n\n  static setExtraModels(swaggerModels: any) {\n    /* istanbul ignore else */\n    if (SWAGGER_CONSTANTS) {\n      const meta = Swagger.getExtraModels(swaggerModels.get);\n      const models: any[] = [\n        ...meta,\n        ...keys(swaggerModels)\n          .map((name) => swaggerModels[name])\n          .filter((one) => one && one.name !== swaggerModels.get.name),\n      ];\n      R.set(\n        SWAGGER_CONSTANTS.DECORATORS.API_EXTRA_MODELS,\n        models,\n        swaggerModels.get\n      );\n    }\n  }\n\n  static setResponseOk(metadata: any, func: Function) {\n    /* istanbul ignore else */\n    if (SWAGGER_CONSTANTS) {\n      R.set(SWAGGER_CONSTANTS.DECORATORS.API_RESPONSE, metadata, func);\n    }\n  }\n\n  static getOperation(func: Function): any {\n    /* istanbul ignore next */\n    return SWAGGER_CONSTANTS\n      ? R.get(SWAGGER_CONSTANTS.DECORATORS.API_OPERATION, func) || {}\n      : {};\n  }\n\n  static getParams(func: Function): any[] {\n    /* istanbul ignore next */\n    return SWAGGER_CONSTANTS\n      ? R.get(SWAGGER_CONSTANTS.DECORATORS.API_PARAMETERS, func) || []\n      : [];\n  }\n\n  static getExtraModels(target: any): any[] {\n    /* istanbul ignore next */\n    return SWAGGER_CONSTANTS\n      ? R.get(SWAGGER_CONSTANTS.DECORATORS.API_EXTRA_MODELS, target) || []\n      : [];\n  }\n\n  static getResponseOk(func: Function): any {\n    /* istanbul ignore next */\n    return SWAGGER_CONSTANTS\n      ? R.get(SWAGGER_CONSTANTS.DECORATORS.API_RESPONSE, func) || {}\n      : {};\n  }\n\n  static createResponseMeta(\n    name: BaseRouteName,\n    options: MergedCrudOptions,\n    swaggerModels: any\n  ): any {\n    const { routes, query } = options;\n\n    switch (name) {\n      case \"getOneBase\":\n        return {\n          [HttpStatus.OK]: {\n            description: \"Get one base response\",\n            type: swaggerModels.get,\n          },\n        };\n      case \"getManyBase\":\n        return {\n          [HttpStatus.OK]: query?.alwaysPaginate\n            ? {\n                description: \"Get paginated response\",\n                type: swaggerModels.getMany,\n              }\n            : {\n                description: \"Get many base response\",\n                schema: {\n                  oneOf: [\n                    {\n                      $ref: getSchemaPath(swaggerModels.getMany.name),\n                    },\n                    {\n                      type: \"array\",\n                      items: {\n                        $ref: getSchemaPath(swaggerModels.get.name),\n                      },\n                    },\n                  ],\n                },\n              },\n        };\n      case \"createOneBase\":\n        return {\n          [HttpStatus.CREATED]: {\n            description: \"Get create one base response\",\n            schema: {\n              $ref: getSchemaPath(swaggerModels.create.name),\n            },\n          },\n        };\n      case \"createManyBase\":\n        return {\n          [HttpStatus.CREATED]: swaggerModels.createMany\n            ? {\n                description: \"Get create many base response\",\n                schema: {\n                  $ref: getSchemaPath(swaggerModels.createMany.name),\n                },\n              }\n            : {\n                description: \"Get create many base response\",\n                schema: {\n                  type: \"array\",\n                  items: {\n                    $ref: getSchemaPath(swaggerModels.create.name),\n                  },\n                },\n              },\n        };\n      case \"deleteOneBase\":\n        return {\n          [HttpStatus.OK]: routes?.deleteOneBase?.returnDeleted\n            ? {\n                description: \"Delete one base response\",\n                schema: {\n                  $ref: getSchemaPath(swaggerModels.delete.name),\n                },\n              }\n            : {\n                description: \"Delete one base response\",\n              },\n        };\n      case \"recoverOneBase\":\n        return {\n          [HttpStatus.OK]: routes?.recoverOneBase?.returnRecovered\n            ? {\n                description: \"Recover one base response\",\n                schema: {\n                  $ref: getSchemaPath(swaggerModels.recover.name),\n                },\n              }\n            : {\n                description: \"Recover one base response\",\n              },\n        };\n      default:\n        const dto = swaggerModels[name.split(\"OneBase\")[0]];\n        return {\n          [HttpStatus.OK]: {\n            description: \"Response\",\n            schema: { $ref: getSchemaPath(dto.name) },\n          },\n        };\n    }\n  }\n\n  static createPathParamsMeta(options: ParamsOptions): any[] {\n    return SWAGGER_CONSTANTS\n      ? keys(options).map((param) => ({\n          name: param,\n          required: true,\n          in: \"path\",\n          type: options[param].type === \"number\" ? Number : String,\n          enum: isArray(options[param]?.enum)\n            ? Object.values(<Array<string>>options[param].enum)\n            : undefined,\n        }))\n      : [];\n  }\n\n  static createQueryParamsMeta(\n    name: BaseRouteName,\n    options: MergedCrudOptions\n  ) {\n    if (options.swagger === undefined || options.swagger.enabled) {\n      return [];\n    }\n\n    const {\n      delim: d,\n      delimStr: coma,\n      fields,\n      search,\n      filter,\n      or,\n      join,\n      sort,\n      limit,\n      offset,\n      page,\n      cache,\n      includeDeleted,\n    } = Swagger.getQueryParamsNames();\n    const docsLink = (a: string) =>\n      // TODO: to modify\n      `<a href=\"https://github.com/2am.tech/crudx/wiki/Requests#${a}\" target=\"_blank\">Docs</a>`;\n\n    const fieldsMetaBase = {\n      name: fields,\n      description: `Selects resource fields. ${docsLink(\"select\")}`,\n      required: false,\n      in: \"query\",\n    };\n    const fieldsMeta = {\n      ...fieldsMetaBase,\n      schema: {\n        type: \"array\",\n        items: {\n          type: \"string\",\n        },\n      },\n      style: \"form\",\n      explode: false,\n    };\n\n    const searchMetaBase = {\n      name: search,\n      description: `Adds search condition. ${docsLink(\"search\")}`,\n      required: false,\n      in: \"query\",\n    };\n\n    const searchMeta = { ...searchMetaBase, schema: { type: \"string\" } };\n\n    const filterMetaBase = {\n      name: filter,\n      description: `Adds filter condition. ${docsLink(\"filter\")}`,\n      required: false,\n      in: \"query\",\n    };\n\n    const filterMeta = {\n      ...filterMetaBase,\n      schema: {\n        type: \"array\",\n        items: {\n          type: \"string\",\n        },\n      },\n      style: \"form\",\n      explode: true,\n    };\n\n    const orMetaBase = {\n      name: or,\n      description: `Adds OR condition. ${docsLink(\"or\")}`,\n      required: false,\n      in: \"query\",\n    };\n\n    const orMeta = {\n      ...orMetaBase,\n      schema: {\n        type: \"array\",\n        items: {\n          type: \"string\",\n        },\n      },\n      style: \"form\",\n      explode: true,\n    };\n\n    const sortMetaBase = {\n      name: sort,\n      description: `Adds sort by field. ${docsLink(\"sort\")}`,\n      required: false,\n      in: \"query\",\n    };\n\n    const sortMeta = {\n      ...sortMetaBase,\n      schema: {\n        type: \"array\",\n        items: {\n          type: \"string\",\n        },\n      },\n      style: \"form\",\n      explode: true,\n    };\n\n    const joinMetaBase = {\n      name: join,\n      description: `Adds relational resources. ${docsLink(\"join\")}`,\n      required: false,\n      in: \"query\",\n    };\n\n    const joinMeta = {\n      ...joinMetaBase,\n      schema: {\n        type: \"array\",\n        items: {\n          type: \"string\",\n        },\n      },\n      style: \"form\",\n      explode: true,\n    };\n\n    const limitMetaBase = {\n      name: limit,\n      description: `Limit amount of resources. ${docsLink(\"limit\")}`,\n      required: false,\n      in: \"query\",\n    };\n\n    const limitMeta = { ...limitMetaBase, schema: { type: \"integer\" } };\n\n    const offsetMetaBase = {\n      name: offset,\n      description: `Offset amount of resources. ${docsLink(\"offset\")}`,\n      required: false,\n      in: \"query\",\n    };\n\n    const offsetMeta = { ...offsetMetaBase, schema: { type: \"integer\" } };\n\n    const pageMetaBase = {\n      name: page,\n      description: `Page portion of resources. ${docsLink(\"page\")}`,\n      required: false,\n      in: \"query\",\n    };\n\n    const pageMeta = { ...pageMetaBase, schema: { type: \"integer\" } };\n\n    const cacheMetaBase = {\n      name: cache,\n      description: `Reset cache (if was enabled). ${docsLink(\"cache\")}`,\n      required: false,\n      in: \"query\",\n    };\n\n    const cacheMeta = {\n      ...cacheMetaBase,\n      schema: { type: \"integer\", minimum: 0, maximum: 1 },\n    };\n\n    const includeDeletedMetaBase = {\n      name: includeDeleted,\n      description: `Include deleted. ${docsLink(\"includeDeleted\")}`,\n      required: false,\n      in: \"query\",\n    };\n\n    const includeDeletedMeta = {\n      ...includeDeletedMetaBase,\n      schema: { type: \"integer\", minimum: 0, maximum: 1 },\n    };\n\n    switch (name) {\n      case \"getManyBase\":\n        return options.query?.softDelete\n          ? [\n              fieldsMeta,\n              searchMeta,\n              filterMeta,\n              orMeta,\n              sortMeta,\n              joinMeta,\n              limitMeta,\n              offsetMeta,\n              pageMeta,\n              cacheMeta,\n              includeDeletedMeta,\n            ]\n          : [\n              fieldsMeta,\n              searchMeta,\n              filterMeta,\n              orMeta,\n              sortMeta,\n              joinMeta,\n              limitMeta,\n              offsetMeta,\n              pageMeta,\n              cacheMeta,\n            ];\n      case \"getOneBase\":\n        return options.query?.softDelete\n          ? [fieldsMeta, joinMeta, cacheMeta, includeDeletedMeta]\n          : [fieldsMeta, joinMeta, cacheMeta];\n      default:\n        return [];\n    }\n  }\n\n  static getQueryParamsNames() {\n    const qbOptions: RequestQueryBuilderOptions =\n      QueryBuilderService.getOptions();\n    const name = (n: any) => {\n      const selected = get(qbOptions, `paramNamesMap[${n}]`);\n      return isString(selected) ? selected : selected?.[0];\n    };\n\n    return {\n      delim: qbOptions.delim,\n      delimStr: qbOptions.delimStr,\n      fields: name(\"fields\"),\n      search: name(\"search\"),\n      filter: name(\"filter\"),\n      or: name(\"or\"),\n      join: name(\"join\"),\n      sort: name(\"sort\"),\n      limit: name(\"limit\"),\n      offset: name(\"offset\"),\n      page: name(\"page\"),\n      cache: name(\"cache\"),\n      includeDeleted: name(\"includeDeleted\"),\n    };\n  }\n}\n","export function safeRequire<T = any>(path: string, loader?: () => T): T | null {\n  try {\n    return loader ? loader() : require(path);\n  } catch (_) {\n    return null;\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 34;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"@nestjs/swagger/dist/constants\");","module.exports = require(\"pluralize\");","module.exports = require(\"@nestjs/swagger/package.json\");","import { get, isNil, isObject, isString, isUndefined } from \"lodash\";\n\nimport { stringify } from \"qs\";\n\nimport {\n  CreateQueryParams,\n  CustomOperators,\n  ParamsNamesMap,\n  RequestQueryBuilderOptions,\n} from \"../interfaces\";\n\nimport {\n  QueryFields,\n  QueryFilter,\n  QueryFilterArr,\n  QueryJoin,\n  QueryJoinArr,\n  QuerySort,\n  QuerySortArr,\n  SCondition,\n} from \"../types\";\n\nimport {\n  hasValue,\n  isArrayFull,\n  validateCondition,\n  validateFields,\n  validateJoin,\n  validateNumeric,\n  validateSort,\n} from \"../helpers\";\n\nimport {\n  REQUEST_DELIM,\n  REQUEST_DELIM_STR,\n  REQUEST_PREFIX_EXTRA,\n} from \"../constants\";\n\nexport class QueryBuilderService {\n  constructor() {\n    this.setParamNames();\n  }\n\n  private static _options: RequestQueryBuilderOptions = {\n    delim: REQUEST_DELIM,\n    delimStr: REQUEST_DELIM_STR,\n    paramNamesMap: <ParamsNamesMap>{\n      fields: [\"fields\", \"select\"],\n      search: \"s\",\n      filter: \"filter\",\n      or: \"or\",\n      join: \"join\",\n      sort: \"sort\",\n      limit: [\"limit\", \"per_page\"],\n      offset: \"offset\",\n      page: \"page\",\n      cache: \"cache\",\n      includeDeleted: \"include_deleted\",\n      extra: REQUEST_PREFIX_EXTRA,\n    },\n  };\n  private paramNames: {\n    [key in keyof ParamsNamesMap as string]: string;\n  } = {};\n  public queryObject: { [key: string]: any } = {};\n  public queryString: string = \"\";\n\n  static setOptions(options: RequestQueryBuilderOptions) {\n    QueryBuilderService._options = {\n      ...QueryBuilderService._options,\n      ...options,\n      paramNamesMap: {\n        ...QueryBuilderService._options.paramNamesMap,\n        ...(options.paramNamesMap ? options.paramNamesMap : {}),\n      },\n    };\n  }\n\n  static getOptions(): RequestQueryBuilderOptions {\n    return QueryBuilderService._options;\n  }\n\n  static create(\n    params?: CreateQueryParams,\n    customOperators: CustomOperators = {}\n  ): QueryBuilderService {\n    const qb: QueryBuilderService = new QueryBuilderService();\n    return isObject(params)\n      ? qb.createFromParams(<CreateQueryParams>params, customOperators)\n      : qb;\n  }\n\n  get options(): RequestQueryBuilderOptions {\n    return QueryBuilderService._options;\n  }\n\n  setParamNames(): void {\n    if (QueryBuilderService._options.paramNamesMap) {\n      Object.keys(QueryBuilderService._options.paramNamesMap).forEach(\n        (key: string): void => {\n          const name = get(QueryBuilderService._options.paramNamesMap, key);\n          this.paramNames[key] = isString(name)\n            ? (name as string)\n            : (name[0] as string);\n        }\n      );\n    }\n  }\n\n  query(encode = true): string {\n    if (this.queryObject[this.paramNames[\"search\"]]) {\n      this.queryObject[this.paramNames[\"filter\"]] = undefined;\n      this.queryObject[this.paramNames[\"or\"]] = undefined;\n    }\n    this.queryString = stringify(this.queryObject, { encode });\n    return this.queryString;\n  }\n\n  select(fields?: QueryFields): this {\n    if (!isNil(fields) && isArrayFull(fields)) {\n      validateFields(fields);\n      this.queryObject[this.paramNames[\"fields\"]] = fields.join(\n        this.options.delimStr\n      );\n    }\n    return this;\n  }\n\n  search(s?: SCondition) {\n    if (!isNil(s) && isObject(s)) {\n      this.queryObject[this.paramNames[\"search\"]] = JSON.stringify(s);\n    }\n    return this;\n  }\n\n  setFilter(\n    f:\n      | QueryFilter\n      | QueryFilterArr\n      | Array<QueryFilter | QueryFilterArr>\n      | undefined,\n    customOperators: CustomOperators = {}\n  ): this {\n    this.setCondition(f, \"filter\", customOperators);\n    return this;\n  }\n\n  setOr(\n    f:\n      | QueryFilter\n      | QueryFilterArr\n      | Array<QueryFilter | QueryFilterArr>\n      | undefined,\n    customOperators: CustomOperators = {}\n  ): this {\n    this.setCondition(f, \"or\", customOperators);\n    return this;\n  }\n\n  setJoin(\n    j: QueryJoin | QueryJoinArr | Array<QueryJoin | QueryJoinArr> | undefined\n  ): this {\n    if (!isNil(j)) {\n      const param: string = this.checkQueryObjectParam(\"join\", []);\n      this.queryObject[param] = [\n        ...this.queryObject[param],\n        ...(Array.isArray(j) && !isString(j[0])\n          ? (j as Array<QueryJoin | QueryJoinArr>).map((o) => this.addJoin(o))\n          : [this.addJoin(j as QueryJoin | QueryJoinArr)]),\n      ];\n    }\n    return this;\n  }\n\n  sortBy(\n    s: QuerySort | QuerySortArr | Array<QuerySort | QuerySortArr> | undefined\n  ): this {\n    if (!isNil(s)) {\n      const param = this.checkQueryObjectParam(\"sort\", []);\n      this.queryObject[param] = [\n        ...this.queryObject[param],\n        ...(Array.isArray(s) && !isString(s[0])\n          ? (s as Array<QuerySort | QuerySortArr>).map((o) => this.addSortBy(o))\n          : [this.addSortBy(s as QuerySort | QuerySortArr)]),\n      ];\n    }\n    return this;\n  }\n\n  setLimit(n: number | undefined): this {\n    this.setNumeric(n, \"limit\");\n    return this;\n  }\n\n  setOffset(n: number | undefined): this {\n    this.setNumeric(n, \"offset\");\n    return this;\n  }\n\n  setPage(n: number | undefined): this {\n    this.setNumeric(n, \"page\");\n    return this;\n  }\n\n  resetCache(): this {\n    this.setNumeric(0, \"cache\");\n    return this;\n  }\n\n  setIncludeDeleted(n: number | undefined): this {\n    this.setNumeric(n, \"includeDeleted\");\n    return this;\n  }\n\n  cond(\n    f: QueryFilter | QueryFilterArr,\n    cond: \"filter\" | \"or\" | \"search\" = \"search\",\n    customOperators: CustomOperators = {}\n  ): string {\n    const filter = Array.isArray(f)\n      ? { field: f[0], operator: f[1], value: f[2] }\n      : f;\n    validateCondition(filter, cond, customOperators);\n    const d = this.options.delim;\n\n    return (\n      filter.field +\n      d +\n      filter.operator +\n      (hasValue(filter.value) ? d + filter.value : \"\")\n    );\n  }\n\n  private addJoin(j: QueryJoin | QueryJoinArr): string {\n    const join: QueryJoin = Array.isArray(j)\n      ? { field: j[0], select: j[1] }\n      : j;\n    validateJoin(join);\n    const d: string | undefined = this.options.delim;\n    const ds: string | undefined = this.options.delimStr;\n\n    return (\n      join.field +\n      (isArrayFull(join.select) ? d + (join.select?.join(ds) ?? \"\") : \"\")\n    );\n  }\n\n  private addSortBy(s: QuerySort | QuerySortArr): string {\n    const sort: QuerySort = Array.isArray(s) ? { field: s[0], order: s[1] } : s;\n    validateSort(sort);\n    const ds: string | undefined = this.options.delimStr;\n\n    return sort.field + ds + sort.order;\n  }\n\n  private createFromParams(\n    params: CreateQueryParams,\n    customOperators: CustomOperators\n  ): this {\n    this.select(params.fields);\n    this.search(params.search);\n    this.setFilter(params.filter, customOperators);\n    this.setOr(params.or, customOperators);\n    this.setJoin(params.join);\n    this.setLimit(params.limit);\n    this.setOffset(params.offset);\n    this.setPage(params.page);\n    this.sortBy(params.sort);\n    if (params.resetCache) {\n      this.resetCache();\n    }\n    this.setIncludeDeleted(params.includeDeleted);\n    return this;\n  }\n\n  private checkQueryObjectParam(\n    cond: keyof ParamsNamesMap,\n    defaults: any\n  ): string {\n    const param = this.paramNames[cond];\n    if (isNil(this.queryObject[param]) && !isUndefined(defaults)) {\n      this.queryObject[param] = defaults;\n    }\n    return param;\n  }\n\n  private setCondition(\n    f:\n      | QueryFilter\n      | QueryFilterArr\n      | Array<QueryFilter | QueryFilterArr>\n      | undefined,\n    cond: \"filter\" | \"or\",\n    customOperators: CustomOperators\n  ): void {\n    if (!isNil(f)) {\n      const param = this.checkQueryObjectParam(cond, []);\n      this.queryObject[param] = [\n        ...this.queryObject[param],\n        ...(Array.isArray(f) && !isString(f[0])\n          ? (f as Array<QueryFilter | QueryFilterArr>).map((o) =>\n              this.cond(o, cond, customOperators)\n            )\n          : [\n              this.cond(\n                f as QueryFilter | QueryFilterArr,\n                cond,\n                customOperators\n              ),\n            ]),\n      ];\n    }\n  }\n\n  private setNumeric(\n    n: number | undefined,\n    cond: \"limit\" | \"offset\" | \"page\" | \"cache\" | \"includeDeleted\"\n  ): void {\n    if (!isNil(n)) {\n      validateNumeric(n, cond);\n      this.queryObject[this.paramNames[cond]] = n;\n    }\n  }\n}\n","module.exports = require(\"qs\");","module.exports = require(\"deepmerge\");","import {\n  get,\n  has,\n  isDate,\n  isEmpty,\n  isNil,\n  isObject,\n  isString,\n  keys,\n  set,\n} from \"lodash\";\n\nimport { RequestQueryException } from \"../exceptions\";\n\nimport {\n  CustomOperators,\n  ParamOption,\n  ParamsNamesMap,\n  ParamsOptions,\n  ParsedRequestParams,\n  RequestQueryBuilderOptions,\n} from \"../interfaces\";\n\nimport {\n  ComparisonOperator,\n  CondOperator,\n  ObjectLiteral,\n  QueryExtra,\n  QueryFields,\n  QueryFilter,\n  QueryJoin,\n  QuerySort,\n  SCondition,\n  SConditionAND,\n  SFields,\n} from \"../types\";\n\nimport { ClassTransformOptions } from \"class-transformer\";\n\nimport { QueryBuilderService } from \"./query-builder.service\";\nimport {\n  hasValue,\n  isArrayFull,\n  isDateString,\n  isStringFull,\n  validateCondition,\n  validateJoin,\n  validateNumeric,\n  validateParamOption,\n  validateSort,\n  validateUUID,\n} from \"../helpers\";\n\nimport { REQUEST_PREFIX_EXTRA } from \"../constants\";\n\nexport class QueryParserService implements ParsedRequestParams {\n  public fields: QueryFields = [];\n  public paramsFilter: (QueryFilter | undefined)[] = [];\n  public authPersist: ObjectLiteral | undefined = undefined;\n\n  public classTransformOptions: ClassTransformOptions | undefined = undefined;\n\n  public search: SCondition | undefined = undefined;\n  public filter: QueryFilter[] = [];\n  public or: QueryFilter[] = [];\n  public join: QueryJoin[] = [];\n  public sort: QuerySort[] = [];\n  public limit: number | undefined;\n  public offset: number | undefined;\n  public page: number | undefined;\n  public cache: number | undefined;\n  public includeDeleted: number | undefined;\n  public extra: QueryExtra = {};\n\n  private _params: any;\n  private _query: any;\n  private _paramNames: string[] = [];\n  private _paramsOptions: ParamsOptions = {};\n\n  private get _options(): RequestQueryBuilderOptions {\n    return QueryBuilderService.getOptions();\n  }\n\n  static create(): QueryParserService {\n    return new QueryParserService();\n  }\n\n  getParsed(): ParsedRequestParams {\n    return {\n      fields: this.fields,\n      paramsFilter: this.paramsFilter,\n      authPersist: this.authPersist,\n      classTransformOptions: this.classTransformOptions,\n      search: this.search,\n      filter: this.filter,\n      or: this.or,\n      join: this.join,\n      sort: this.sort,\n      limit: this.limit,\n      offset: this.offset,\n      page: this.page,\n      cache: this.cache,\n      includeDeleted: this.includeDeleted,\n      extra: this.extra,\n    };\n  }\n\n  setAuthPersist(persist: ObjectLiteral = {}) {\n    this.authPersist = persist || /* istanbul ignore next */ {};\n  }\n\n  setClassTransformOptions(options: ClassTransformOptions = {}) {\n    this.classTransformOptions = options || /* istanbul ignore next */ {};\n  }\n\n  convertFilterToSearch(filter: QueryFilter): SFields | SConditionAND {\n    const isEmptyValue = {\n      isnull: true,\n      notnull: true,\n    };\n\n    return filter\n      ? {\n          [filter.field]: {\n            [filter.operator]: has(isEmptyValue, filter.operator)\n              ? get(isEmptyValue, filter.operator)\n              : filter.value,\n          },\n        }\n      : /* istanbul ignore next */ {};\n  }\n\n  parseQuery(query: any, customOperators: CustomOperators = {}): this {\n    if (isObject(query)) {\n      const paramNames: string[] = keys(query);\n\n      if (!isEmpty(paramNames)) {\n        this._query = query;\n        this._paramNames = paramNames;\n        const searchData = this._query[this.getParamNames(\"search\")[0]];\n        this.search = this.parseSearchQueryParam(searchData) as any;\n        if (isNil(this.search)) {\n          this.filter = this.parseQueryParam(\n            \"filter\",\n            this.conditionParser.bind(this, \"filter\", customOperators)\n          );\n          this.or = this.parseQueryParam(\n            \"or\",\n            this.conditionParser.bind(this, \"or\", customOperators)\n          );\n        }\n        this.fields =\n          this.parseQueryParam(\"fields\", this.fieldsParser.bind(this))[0] || [];\n        this.join = this.parseQueryParam(\"join\", this.joinParser.bind(this));\n        this.sort = this.parseQueryParam(\"sort\", this.sortParser.bind(this));\n        this.limit = this.parseQueryParam(\n          \"limit\",\n          this.numericParser.bind(this, \"limit\")\n        )[0];\n        this.offset = this.parseQueryParam(\n          \"offset\",\n          this.numericParser.bind(this, \"offset\")\n        )[0];\n        this.page = this.parseQueryParam(\n          \"page\",\n          this.numericParser.bind(this, \"page\")\n        )[0];\n        this.cache = this.parseQueryParam(\n          \"cache\",\n          this.numericParser.bind(this, \"cache\")\n        )[0];\n        this.includeDeleted = this.parseQueryParam(\n          \"includeDeleted\",\n          this.numericParser.bind(this, \"includeDeleted\")\n        )[0];\n\n        this.extra = this.parseExtraFromQueryParam();\n      }\n    }\n\n    return this;\n  }\n\n  parseParams(params: any, options: ParamsOptions): this {\n    if (isObject(params)) {\n      const paramNames: string[] = keys(params);\n\n      if (!isNil(paramNames)) {\n        this._params = params;\n        this._paramsOptions = options;\n        this.paramsFilter = paramNames\n          .map((name: string) => this.paramParser(name))\n          .filter((filter: QueryFilter | undefined) => filter);\n      }\n    }\n\n    return this;\n  }\n\n  private getParamNames(type: keyof ParamsNamesMap): string[] {\n    return this._paramNames.filter((p: string): boolean => {\n      const name: string | string[] = get(\n        this._options.paramNamesMap,\n        type,\n        \"\"\n      );\n      return isString(name)\n        ? name === p\n        : (name as string[]).some((m: string): boolean => m === p);\n    });\n  }\n\n  private getParamValues(value: string | string[], parser: Function): any[] {\n    if (isStringFull(value)) {\n      return [parser.call(this, value)];\n    }\n\n    if (isArrayFull(value)) {\n      return (value as string[]).map((val: string) => parser(val));\n    }\n\n    return [];\n  }\n\n  private parseQueryParam(type: keyof ParamsNamesMap, parser: Function): any[] {\n    const param: string[] = this.getParamNames(type);\n\n    if (isArrayFull(param)) {\n      // @ts-ignore\n      return param.reduce(\n        // @ts-ignore\n        (a: [], name: string): string[] => [\n          ...a,\n          ...this.getParamValues(this._query[name], parser),\n        ],\n        []\n      );\n    }\n\n    return [];\n  }\n\n  private parseExtraFromQueryParam(): QueryExtra {\n    const extraParam: string | string[] | [] = get(\n      this._options.paramNamesMap,\n      \"extra\",\n      []\n    );\n    const params: string[] = Array.isArray(extraParam)\n      ? extraParam\n      : [extraParam];\n    const extraKeys: {} = keys(this._query || {})\n      .filter((k: string) => params.find((p: string) => k?.startsWith(p)))\n      .reduce((o: {}, k: string) => {\n        const key: string = k.replace(REQUEST_PREFIX_EXTRA, \"\");\n        this.parseDotChainToObject(this._query[k], key, o);\n        return o;\n      }, {});\n    return keys(extraKeys).length > 0 ? extraKeys : undefined;\n  }\n\n  /**\n   * Build an object from data and composite key.\n   *\n   * @param data to used on parse workflow\n   * @param key composite key as 'foo.bar.hero'\n   * @param result object with parsed \"data\" and \"key\" structure\n   * @private\n   */\n  private parseDotChainToObject(data: any, key: string, result: {} = {}): void {\n    if (key.includes(\".\")) {\n      const keys: string[] = key.split(\".\");\n      const firstKey: string | undefined = keys.shift();\n      set(result, firstKey as string, {});\n      this.parseDotChainToObject(\n        data,\n        keys.join(\".\"),\n        get(result, firstKey as string)\n      );\n    } else {\n      set(result, key, this.parseValue(data));\n    }\n  }\n\n  private parseValue(val: any) {\n    try {\n      const parsed = JSON.parse(val);\n\n      // throw new Error('Don\\'t support object now')\n      if (\n        (!isDate(parsed) && isObject(parsed)) ||\n        // JS cannot handle big numbers. Leave it as a string to prevent data loss\n        (typeof parsed === \"number\" &&\n          parsed.toLocaleString(\"fullwide\", { useGrouping: false }) !== val)\n      ) {\n        return val;\n      }\n      return parsed;\n    } catch (_) {\n      if (isDateString(val)) {\n        return new Date(val);\n      }\n      return val;\n    }\n  }\n\n  private parseValues(values: any) {\n    return isArrayFull(values)\n      ? values.map((v: any) => this.parseValue(v))\n      : this.parseValue(values);\n  }\n\n  private parseSearchQueryParam(d: any): SCondition | undefined {\n    if (isNil(d)) {\n      return undefined;\n    }\n    try {\n      const data = JSON.parse(d);\n\n      if (!isObject(data)) {\n        throw new Error();\n      }\n\n      return data;\n    } catch (_) {\n      throw new RequestQueryException(\"Invalid search param. JSON expected\");\n    }\n  }\n\n  private fieldsParser(data: string): QueryFields {\n    // @ts-ignore\n    return data.split(this._options.delimStr);\n  }\n\n  private conditionParser(\n    cond: \"filter\" | \"or\" | \"search\",\n    customOperators: CustomOperators,\n    data: string\n  ): QueryFilter {\n    const isArrayValue: string[] = [\n      CondOperator.IN as string,\n      CondOperator.NOT_IN as string,\n      CondOperator.BETWEEN as string,\n      CondOperator.IN_LOW as string,\n      CondOperator.NOT_IN_LOW as string,\n    ].concat(\n      Object.keys(customOperators).filter(\n        (op: string) => customOperators[op].isArray\n      )\n    );\n    const isEmptyValue: string[] = [\n      CondOperator.IS_NULL as string,\n      CondOperator.NOT_NULL as string,\n    ];\n    // @ts-ignore\n    const param: string[] = data.split(this._options.delim);\n    const field: string = param[0];\n    const operator: string = param[1] as ComparisonOperator;\n    let value: string = param[2] || \"\";\n\n    if (isArrayValue.some((name: string): boolean => name === operator)) {\n      // @ts-ignore\n      value = value.split(this._options.delimStr) as any;\n    }\n\n    value = this.parseValues(value);\n\n    if (\n      !isEmptyValue.some((name: string): boolean => name === operator) &&\n      !hasValue(value)\n    ) {\n      throw new RequestQueryException(`Invalid ${cond} value`);\n    }\n\n    const condition: QueryFilter = { field, operator, value };\n    validateCondition(condition, cond, customOperators);\n\n    return condition;\n  }\n\n  private joinParser(data: string): QueryJoin {\n    // @ts-ignore\n    const param: string[] = data.split(this._options.delim);\n\n    const join: QueryJoin = {\n      field: param[0],\n      select: isStringFull(param[1])\n        ? // @ts-ignore\n          param[1].split(this._options.delimStr)\n        : undefined,\n    };\n    validateJoin(join);\n\n    return join;\n  }\n\n  private sortParser(data: string): QuerySort {\n    const param: string[] = data.split(this._options.delimStr);\n    const sort: QuerySort = {\n      field: param[0],\n      order: param[1] as any,\n    };\n    validateSort(sort);\n\n    return sort;\n  }\n\n  private numericParser(\n    num: \"limit\" | \"offset\" | \"page\" | \"cache\" | \"includeDeleted\",\n    data: string\n  ): number {\n    const val = this.parseValue(data);\n    validateNumeric(val, num);\n\n    return val;\n  }\n\n  private paramParser(name: string): QueryFilter | undefined {\n    validateParamOption(this._paramsOptions, name);\n    const option: ParamOption = this._paramsOptions[name];\n\n    if (option.disabled) {\n      return undefined;\n    }\n\n    let value = this._params[name];\n\n    switch (option.type) {\n      case \"number\":\n        value = this.parseValue(value);\n        validateNumeric(value, `param ${name}`);\n        break;\n      case \"uuid\":\n        validateUUID(value, name);\n        break;\n      default:\n        break;\n    }\n\n    return { field: option.field as string, operator: \"$eq\", value };\n  }\n}\n","import { RequestMethod } from \"@nestjs/common\";\nimport { RouteParamtypes } from \"@nestjs/common/enums/route-paramtypes.enum\";\nimport { get, isEqual, isFunction, isNil, isUndefined, keys } from \"lodash\";\nimport {\n  createBulkDto,\n  getValidationPipe,\n  isArrayFull,\n  isFalse,\n  isIn,\n  isObjectFull,\n  R,\n  SerializeHelper,\n  Swagger,\n} from \"../helpers\";\n\nimport { CrudActions, CrudValidationGroups } from \"../enums\";\nimport {\n  CrudRequestInterceptor,\n  CrudResponseInterceptor,\n} from \"../interceptors\";\n\nimport {\n  AuthOptions,\n  BaseRoute,\n  CrudOptions,\n  CrudRequest,\n  MergedCrudOptions,\n  OperatorsOptions,\n  ParamsOptions,\n  QueryOptions,\n  RoutesOptions,\n  SwaggerOptions,\n} from \"../interfaces\";\nimport { CrudConfigService } from \"../services\";\nimport { BaseRouteName } from \"../types\";\n\nimport * as SWAGGER_CONSTANTS from '@nestjs/swagger/dist/constants';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst deepmerge = require('deepmerge');\n\nexport class RoutesFactoryService {\n  protected options: MergedCrudOptions;\n  protected swaggerModels: any = {};\n\n  constructor(protected target: any, options: CrudOptions) {\n    this.options = options;\n    this.create();\n  }\n\n  /* istanbul ignore next */\n  static create(target: any, options: CrudOptions): RoutesFactoryService {\n    return new RoutesFactoryService(target, options);\n  }\n\n  protected get targetProto(): any {\n    return this.target.prototype;\n  }\n\n  protected get modelName(): string {\n    return this.options.model.type.name;\n  }\n\n  protected get modelType(): any {\n    return this.options.model.type;\n  }\n\n  protected get actionsMap(): { [key in BaseRouteName]: CrudActions } {\n    return {\n      getManyBase: CrudActions.ReadAll,\n      getOneBase: CrudActions.ReadOne,\n      createManyBase: CrudActions.CreateMany,\n      createOneBase: CrudActions.CreateOne,\n      updateOneBase: CrudActions.UpdateOne,\n      deleteOneBase: CrudActions.DeleteOne,\n      replaceOneBase: CrudActions.ReplaceOne,\n      recoverOneBase: CrudActions.RecoverOne,\n    };\n  }\n\n  protected create(): void {\n    const routesSchema: BaseRoute[] = this.getRoutesSchema();\n    this.mergeOptions();\n    this.setResponseModels();\n    this.createRoutes(routesSchema);\n    this.overrideRoutes(routesSchema);\n    this.enableRoutes(routesSchema);\n  }\n\n  protected mergeOptions(): void {\n    // merge auth config\n    const authOptions: AuthOptions = R.getCrudAuthOptions(this.target);\n    this.options.auth = isObjectFull(authOptions) ? authOptions : {};\n    if (isUndefined(this.options.auth.property)) {\n      this.options.auth.property = CrudConfigService.config?.auth?.property;\n    }\n    if (isUndefined(this.options.auth.groups)) {\n      this.options.auth.groups = CrudConfigService.config?.auth?.groups;\n    }\n    if (isUndefined(this.options.auth.classTransformOptions)) {\n      // @ts-ignore\n      this.options.auth.classTransformOptions =\n        CrudConfigService.config.auth?.classTransformOptions;\n    }\n\n    // merge query config\n    const query: QueryOptions | {} = isObjectFull(this.options.query)\n      ? <QueryOptions>this.options.query\n      : {};\n\n    this.options.query = { ...CrudConfigService.config.query, ...query };\n\n    // merge routes config\n    const routes: RoutesOptions | {} = isObjectFull(this.options.routes)\n      ? <RoutesOptions>this.options.routes\n      : {};\n    this.options.routes = deepmerge(\n      CrudConfigService.config.routes || {},\n      routes,\n      {\n        // @ts-ignore\n        arrayMerge: (a, b, c) => b,\n      }\n    );\n\n    // merge operators config\n    const operators: OperatorsOptions | {} = isObjectFull(\n      this.options.operators\n    )\n      ? <OperatorsOptions>this.options.operators\n      : {};\n    this.options.operators = <OperatorsOptions>(\n      deepmerge(\n        <OperatorsOptions>CrudConfigService.config?.operators,\n        operators\n      )\n    );\n\n    // set params\n    this.options.params = <ParamsOptions | {}>isObjectFull(this.options.params)\n      ? this.options.params\n      : isObjectFull(CrudConfigService.config.params)\n      ? CrudConfigService.config.params\n      : {};\n    const hasPrimary: boolean = this.getPrimaryParams().length > 0;\n    if (!hasPrimary) {\n      // @ts-ignore\n      this.options.params[\"id\"] = {\n        field: \"id\",\n        type: \"number\",\n        primary: true,\n      };\n    }\n\n    // set dto\n    if (!isObjectFull(this.options.dto)) {\n      this.options.dto = {};\n    }\n\n    // set serialize\n    const serialize = isObjectFull(this.options.serialize)\n      ? this.options.serialize\n      : {};\n    this.options.serialize = {\n      ...CrudConfigService.config.serialize,\n      ...serialize,\n    };\n    this.options.serialize.get = isFalse(this.options.serialize.get)\n      ? false\n      : this.options.serialize.get || this.modelType;\n    this.options.serialize.getMany = isFalse(this.options.serialize.getMany)\n      ? false\n      : this.options.serialize.getMany\n      ? this.options.serialize.getMany\n      : isFalse(this.options.serialize.get)\n      ? false\n      : SerializeHelper.createGetManyDto(\n          this.options.serialize.get,\n          this.modelName\n        );\n    this.options.serialize.create = isFalse(this.options.serialize.create)\n      ? false\n      : this.options.serialize.create || this.modelType;\n    this.options.serialize.update = isFalse(this.options.serialize.update)\n      ? false\n      : this.options.serialize.update || this.modelType;\n    this.options.serialize.replace = isFalse(this.options.serialize.replace)\n      ? false\n      : this.options.serialize.replace || this.modelType;\n    this.options.serialize.delete =\n      isFalse(this.options.serialize.delete) ||\n      !this.options.routes?.deleteOneBase?.returnDeleted\n        ? false\n        : this.options.serialize.delete || this.modelType;\n\n    this.options.swagger = this.getSwaggerOptions();\n\n    R.setCrudOptions(this.options, this.target);\n  }\n\n  protected getSwaggerOptions(): SwaggerOptions {\n    const isSwaggerDefined = SWAGGER_CONSTANTS !== undefined && SWAGGER_CONSTANTS !== null;\n    const options = <SwaggerOptions>{\n      enabled: false,\n    }\n\n    if (this.options.swagger === undefined) {\n      options.enabled = true && isSwaggerDefined;\n\n      return options;\n    }\n\n    if (isFalse(this.options.swagger!.enabled)) {\n      options.enabled = false;\n\n      return options;\n    }\n    \n    options.enabled = isSwaggerDefined;\n\n    return options;\n  }\n\n  protected getRoutesSchema(): BaseRoute[] {\n    return [\n      {\n        name: \"getOneBase\",\n        path: \"/\",\n        method: RequestMethod.GET,\n        enable: false,\n        override: false,\n        withParams: true,\n      },\n      {\n        name: \"getManyBase\",\n        path: \"/\",\n        method: RequestMethod.GET,\n        enable: false,\n        override: false,\n        withParams: false,\n      },\n      {\n        name: \"createOneBase\",\n        path: \"/\",\n        method: RequestMethod.POST,\n        enable: false,\n        override: false,\n        withParams: false,\n      },\n      {\n        name: \"createManyBase\",\n        path: \"/bulk\",\n        method: RequestMethod.POST,\n        enable: false,\n        override: false,\n        withParams: false,\n      },\n      {\n        name: \"updateOneBase\",\n        path: \"/\",\n        method: RequestMethod.PATCH,\n        enable: false,\n        override: false,\n        withParams: true,\n      },\n      {\n        name: \"replaceOneBase\",\n        path: \"/\",\n        method: RequestMethod.PUT,\n        enable: false,\n        override: false,\n        withParams: true,\n      },\n      {\n        name: \"deleteOneBase\",\n        path: \"/\",\n        method: RequestMethod.DELETE,\n        enable: false,\n        override: false,\n        withParams: true,\n      },\n      {\n        name: \"recoverOneBase\",\n        path: \"/recover\",\n        method: RequestMethod.PATCH,\n        enable: false,\n        override: false,\n        withParams: true,\n      },\n    ];\n  }\n\n  protected getManyBase(name: BaseRouteName) {\n    this.targetProto[name] = function getManyBase(req: CrudRequest) {\n      return this.service.getMany(req);\n    };\n  }\n\n  protected getOneBase(name: BaseRouteName) {\n    this.targetProto[name] = function getOneBase(req: CrudRequest) {\n      return this.service.getOne(req);\n    };\n  }\n\n  protected createOneBase(name: BaseRouteName) {\n    this.targetProto[name] = function createOneBase(\n      req: CrudRequest,\n      dto: any\n    ) {\n      return this.service.createOne(req, dto);\n    };\n  }\n\n  protected createManyBase(name: BaseRouteName) {\n    this.targetProto[name] = function createManyBase(\n      req: CrudRequest,\n      dto: any\n    ) {\n      return this.service.createMany(req, dto);\n    };\n  }\n\n  protected updateOneBase(name: BaseRouteName) {\n    this.targetProto[name] = function updateOneBase(\n      req: CrudRequest,\n      dto: any\n    ) {\n      return this.service.updateOne(req, dto);\n    };\n  }\n\n  protected replaceOneBase(name: BaseRouteName) {\n    this.targetProto[name] = function replaceOneBase(\n      req: CrudRequest,\n      dto: any\n    ) {\n      return this.service.replaceOne(req, dto);\n    };\n  }\n\n  protected deleteOneBase(name: BaseRouteName) {\n    this.targetProto[name] = function deleteOneBase(req: CrudRequest) {\n      return this.service.deleteOne(req);\n    };\n  }\n\n  protected recoverOneBase(name: BaseRouteName) {\n    this.targetProto[name] = function recoverOneBase(req: CrudRequest) {\n      return this.service.recoverOne(req);\n    };\n  }\n\n  protected canCreateRoute(name: BaseRouteName) {\n    const only: BaseRouteName[] | undefined = this.options.routes?.only;\n    const exclude: BaseRouteName[] | undefined = this.options.routes?.exclude;\n\n    // include recover route only for models with soft delete option\n    if (name === \"recoverOneBase\" && this.options.query?.softDelete !== true) {\n      return false;\n    }\n\n    if (isArrayFull(only)) {\n      // @ts-ignore\n      return only.some((route: BaseRouteName): boolean => route === name);\n    }\n\n    if (isArrayFull(exclude)) {\n      // @ts-ignore\n      return !exclude.some((route: BaseRouteName): boolean => route === name);\n    }\n\n    return true;\n  }\n\n  protected setResponseModels() {\n    const modelType = isFunction(this.modelType)\n      ? this.modelType\n      : SerializeHelper.createGetOneResponseDto(this.modelName);\n    this.swaggerModels.get = isFunction(this.options.serialize?.get)\n      ? this.options.serialize?.get\n      : modelType;\n    this.swaggerModels.getMany =\n      this.options.serialize?.getMany ||\n      SerializeHelper.createGetManyDto(this.swaggerModels.get, this.modelName);\n    this.swaggerModels.create = isFunction(this.options.serialize?.create)\n      ? this.options.serialize?.create\n      : modelType;\n    this.swaggerModels.update = isFunction(this.options.serialize?.update)\n      ? this.options.serialize?.update\n      : modelType;\n    this.swaggerModels.replace = isFunction(this.options.serialize?.replace)\n      ? this.options.serialize?.replace\n      : modelType;\n    this.swaggerModels.delete = isFunction(this.options.serialize?.delete)\n      ? this.options.serialize?.delete\n      : modelType;\n    this.swaggerModels.recover = isFunction(this.options.serialize?.recover)\n      ? this.options.serialize?.recover\n      : modelType;\n    Swagger.setExtraModels(this.swaggerModels);\n  }\n\n  protected createRoutes(routesSchema: BaseRoute[]) {\n    const primaryParams: string[] = this.getPrimaryParams().filter(\n      (param: string) => !this.options.params?.[param]?.disabled\n    );\n\n    routesSchema.forEach((route) => {\n      if (this.canCreateRoute(route.name)) {\n        // create base method\n        this[route.name](route.name);\n        route.enable = true;\n        // set metadata\n        this.setBaseRouteMeta(route.name);\n      }\n\n      if (route.withParams && primaryParams.length > 0) {\n        route.path =\n          route.path !== \"/\"\n            ? `${primaryParams\n                .map((param: string): string => `/:${param}`)\n                .join(\"\")}${route.path}`\n            : primaryParams\n                .map((param: string): string => `/:${param}`)\n                .join(\"\");\n      }\n    });\n  }\n\n  protected overrideRoutes(routesSchema: BaseRoute[]): void {\n    Object.getOwnPropertyNames(this.targetProto).forEach(\n      (name: string): void => {\n        const override: BaseRouteName = R.getOverrideRoute(\n          this.targetProto[name]\n        );\n        const route: BaseRoute | undefined = routesSchema.find((r: BaseRoute) =>\n          isEqual(r.name, override)\n        );\n\n        if (override && route && route.enable) {\n          // get metadata\n          const interceptors: any[] = R.getInterceptors(this.targetProto[name]);\n          const baseInterceptors: any[] = R.getInterceptors(\n            this.targetProto[override]\n          );\n          const baseAction: CrudActions = R.getAction(\n            this.targetProto[override]\n          );\n          const operation = Swagger.getOperation(this.targetProto[name]);\n          const baseOperation = Swagger.getOperation(\n            this.targetProto[override]\n          );\n          const swaggerParams = Swagger.getParams(this.targetProto[name]);\n          const baseSwaggerParams = Swagger.getParams(\n            this.targetProto[override]\n          );\n          const responseOk = Swagger.getResponseOk(this.targetProto[name]);\n          const baseResponseOk = Swagger.getResponseOk(\n            this.targetProto[override]\n          );\n          // set metadata\n          R.setInterceptors(\n            [...baseInterceptors, ...interceptors],\n            this.targetProto[name]\n          );\n          R.setAction(baseAction, this.targetProto[name]);\n          Swagger.setOperation(\n            { ...baseOperation, ...operation },\n            this.targetProto[name]\n          );\n          Swagger.setParams(\n            [...baseSwaggerParams, ...swaggerParams],\n            this.targetProto[name]\n          );\n          Swagger.setResponseOk(\n            { ...baseResponseOk, ...responseOk },\n            this.targetProto[name]\n          );\n          this.overrideParsedBodyDecorator(override, name);\n          // enable route\n          R.setRoute(route, this.targetProto[name]);\n          route.override = true;\n        }\n      }\n    );\n  }\n\n  protected enableRoutes(routesSchema: BaseRoute[]) {\n    routesSchema.forEach((route) => {\n      if (!route.override && route.enable) {\n        R.setRoute(route, this.targetProto[route.name]);\n      }\n    });\n  }\n\n  protected overrideParsedBodyDecorator(override: BaseRouteName, name: string) {\n    const allowed: BaseRouteName[] = [\n      \"createManyBase\",\n      \"createOneBase\",\n      \"updateOneBase\",\n      \"replaceOneBase\",\n    ] as BaseRouteName[];\n    const withBody: Boolean = isIn(override, allowed);\n    const parsedBody = R.getParsedBody(this.targetProto[name]);\n\n    if (withBody && parsedBody) {\n      const baseKey: string = `${RouteParamtypes.BODY}:1`;\n      const key: string = `${RouteParamtypes.BODY}:${parsedBody.index}`;\n      const baseRouteArgs = R.getRouteArgs(this.target, override);\n      const routeArgs = R.getRouteArgs(this.target, name);\n      const baseBodyArg = baseRouteArgs[baseKey];\n      R.setRouteArgs(\n        {\n          ...routeArgs,\n          [key]: {\n            ...baseBodyArg,\n            index: parsedBody.index,\n          },\n        },\n        this.target,\n        name\n      );\n\n      /* istanbul ignore else */\n      if (isEqual(override, \"createManyBase\")) {\n        const paramTypes: any[] = R.getRouteArgsTypes(this.targetProto, name);\n        const metatype = paramTypes[parsedBody.index];\n        const types = [String, Boolean, Number, Array, Object];\n        const toCopy: boolean = isIn(metatype, types) || isNil(metatype);\n\n        if (toCopy) {\n          const baseParamTypes: any[] = R.getRouteArgsTypes(\n            this.targetProto,\n            override\n          );\n          const baseMetatype = baseParamTypes[1];\n          paramTypes.splice(parsedBody.index, 1, baseMetatype);\n          R.setRouteArgsTypes(paramTypes, this.targetProto, name);\n        }\n      }\n    }\n  }\n\n  protected getPrimaryParams(): string[] {\n    return keys(this.options.params).filter(\n      (param: string) =>\n        this.options.params?.[param] && this.options.params[param].primary\n    );\n  }\n\n  protected setBaseRouteMeta(name: BaseRouteName) {\n    this.setRouteArgs(name);\n    this.setRouteArgsTypes(name);\n    this.setInterceptors(name);\n    this.setAction(name);\n    this.setSwaggerOperation(name);\n    this.setSwaggerPathParams(name);\n    this.setSwaggerQueryParams(name);\n    this.setSwaggerResponseOk(name);\n    // set decorators after Swagger so metadata can be overwritten\n    this.setDecorators(name);\n  }\n\n  protected setRouteArgs(name: BaseRouteName) {\n    let rest = {};\n    const routes: BaseRouteName[] = [\n      \"createManyBase\",\n      \"createOneBase\",\n      \"updateOneBase\",\n      \"replaceOneBase\",\n    ];\n\n    if (isIn(name, routes)) {\n      const action: string = this.routeNameAction(name);\n      const hasDto: boolean = !isNil(get(this.options, `dto.${action}`));\n      const { UPDATE, CREATE } = CrudValidationGroups;\n      const groupEnum: CrudValidationGroups = isIn(name, [\n        \"updateOneBase\",\n        \"replaceOneBase\",\n      ])\n        ? UPDATE\n        : CREATE;\n      const group: CrudValidationGroups | undefined = !hasDto\n        ? groupEnum\n        : undefined;\n\n      rest = R.setBodyArg(1, [getValidationPipe(this.options, group)]);\n    }\n\n    R.setRouteArgs({ ...R.setParsedRequestArg(0), ...rest }, this.target, name);\n  }\n\n  protected setRouteArgsTypes(name: BaseRouteName): void {\n    switch (true) {\n      case isEqual(name, \"createManyBase\"):\n        const bulkDto = createBulkDto(this.options);\n        R.setRouteArgsTypes([Object, bulkDto], this.targetProto, name);\n        break;\n      case isIn(name, [\"createOneBase\", \"updateOneBase\", \"replaceOneBase\"]):\n        const action: string = this.routeNameAction(name);\n        const dto = get(this.options, `dto.${action}`, this.modelType);\n        R.setRouteArgsTypes([Object, dto], this.targetProto, name);\n        break;\n      default:\n        R.setRouteArgsTypes([Object], this.targetProto, name);\n    }\n  }\n\n  protected setInterceptors(name: BaseRouteName): void {\n    const interceptors = get(this.options, `routes.${name}.interceptors`, []);\n    R.setInterceptors(\n      [\n        CrudRequestInterceptor,\n        CrudResponseInterceptor,\n        ...(isArrayFull(interceptors) ? interceptors : []),\n      ],\n      this.targetProto[name]\n    );\n  }\n\n  protected setDecorators(name: BaseRouteName): void {\n    const decorators = get(this.options, `routes.${name}.decorators`, []);\n    R.setDecorators(\n      isArrayFull(decorators) ? decorators : [],\n      this.targetProto,\n      name\n    );\n  }\n\n  protected setAction(name: BaseRouteName): void {\n    R.setAction(this.actionsMap[name], this.targetProto[name]);\n  }\n\n  protected setSwaggerOperation(name: BaseRouteName) {\n    const summary: string = Swagger.operationsMap(this.modelName)[name];\n    const operationId: string =\n      name + this.targetProto.constructor.name + this.modelName;\n    Swagger.setOperation({ summary, operationId }, this.targetProto[name]);\n  }\n\n  protected setSwaggerPathParams(name: BaseRouteName): void {\n    const metadata: any[] = Swagger.getParams(this.targetProto[name]);\n    const withoutPrimary: BaseRouteName[] = [\n      \"createManyBase\",\n      \"createOneBase\",\n      \"getManyBase\",\n    ];\n\n    const removePrimary: boolean = isIn(name, withoutPrimary);\n    const params: {} = keys(this.options.params)\n      .filter((key: string) => !get(this.options, `params.${key}.disabled`))\n      .filter(\n        (key: string) =>\n          !(removePrimary && get(this.options, `params.${key}.primary`))\n      )\n      .reduce((a, c) => ({ ...a, [c]: this.options.params?.[c] }), {});\n\n    const pathParamsMeta: any[] = Swagger.createPathParamsMeta(params);\n    Swagger.setParams([...metadata, ...pathParamsMeta], this.targetProto[name]);\n  }\n\n  protected setSwaggerQueryParams(name: BaseRouteName): void {\n    const metadata: any[] = Swagger.getParams(this.targetProto[name]);\n    const queryParamsMeta = Swagger.createQueryParamsMeta(name, this.options);\n    Swagger.setParams(\n      [...metadata, ...queryParamsMeta],\n      this.targetProto[name]\n    );\n  }\n\n  protected setSwaggerResponseOk(name: BaseRouteName): void {\n    const metadata = Swagger.getResponseOk(this.targetProto[name]);\n    const metadataToAdd =\n      Swagger.createResponseMeta(name, this.options, this.swaggerModels) || {};\n    Swagger.setResponseOk(\n      { ...metadata, ...metadataToAdd },\n      this.targetProto[name]\n    );\n  }\n\n  protected routeNameAction(name: BaseRouteName): string {\n    return name.split(\"OneBase\")[0] || name.split(\"ManyBase\")[0];\n  }\n}\n","export * from \"./crud-request.interceptor\";\nexport * from \"./crud-response.interceptor\";\n","import {\n  BadRequestException,\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { QueryFilter, QueryFilterFunction, SCondition } from \"../types\";\nimport { RequestQueryException } from \"../exceptions\";\nimport { QueryParserService } from \"../services\";\nimport { isArrayFull } from \"../helpers\";\nimport { isFunction, isNil } from \"lodash\";\nimport { ClassTransformOptions } from \"class-transformer\";\n\nimport { PARSED_CRUD_REQUEST_KEY } from \"../constants\";\nimport { CrudActions } from \"../enums\";\nimport { CrudRequest, MergedCrudOptions, ParamsOptions } from \"../interfaces\";\nimport { CrudBaseInterceptor } from \"./crud-base.interceptor\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class CrudRequestInterceptor\n  extends CrudBaseInterceptor\n  implements NestInterceptor\n{\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    const req = context.switchToHttp().getRequest();\n\n    try {\n      /* istanbul ignore else */\n      if (!req[PARSED_CRUD_REQUEST_KEY]) {\n        const { ctrlOptions, crudOptions, action } = this.getCrudInfo(context);\n        const parser = QueryParserService.create();\n\n        parser.parseQuery(req.query, crudOptions.operators?.custom);\n\n        let auth = null;\n        if (!isNil(ctrlOptions)) {\n          const search = this.getSearch(\n            parser,\n            crudOptions,\n            action,\n            req.params\n          );\n          auth = this.getAuth(parser, crudOptions, req);\n          parser.search = auth.or\n            ? { $or: [auth.or, { $and: search }] }\n            : { $and: [auth.filter, ...search] };\n        } else {\n          parser.search = { $and: this.getSearch(parser, crudOptions, action) };\n        }\n\n        req[PARSED_CRUD_REQUEST_KEY] = this.getCrudRequest(\n          parser,\n          crudOptions,\n          auth?.auth\n        );\n      }\n\n      return next.handle();\n    } catch (error) {\n      throw error instanceof RequestQueryException\n        ? new BadRequestException(error.message)\n        : error;\n    }\n  }\n\n  getCrudRequest(\n    parser: QueryParserService,\n    crudOptions: Partial<MergedCrudOptions>,\n    auth?: any\n  ): CrudRequest {\n    const parsed = parser.getParsed();\n    const { query, routes, params, operators } = crudOptions;\n    return {\n      parsed,\n      options: {\n        query,\n        routes,\n        params,\n        operators,\n      },\n      auth,\n    };\n  }\n\n  getSearch(\n    parser: QueryParserService,\n    crudOptions: Partial<MergedCrudOptions>,\n    action: CrudActions,\n    params?: any\n  ): SCondition[] {\n    // params condition\n    const paramsSearch = this.getParamsSearch(parser, crudOptions, params);\n\n    // if `CrudOptions.query.filter` is a function then return transformed query search conditions\n    if (isFunction(crudOptions.query?.filter)) {\n      const filterCond: SCondition =\n        (crudOptions.query?.filter as QueryFilterFunction)(\n          parser.search,\n          action === CrudActions.ReadAll\n        ) || {};\n\n      return [...paramsSearch, filterCond];\n    }\n\n    // if `CrudOptions.query.filter` is array or search condition type\n    const optionsFilter = isArrayFull(crudOptions.query?.filter)\n      ? (crudOptions.query?.filter as QueryFilter[]).map(\n          parser.convertFilterToSearch\n        )\n      : [(crudOptions.query?.filter as SCondition) || {}];\n\n    let search: SCondition[] = [];\n\n    if (parser.search) {\n      search = [parser.search];\n    } else if (parser.filter.length > 0 && parser.or.length > 0) {\n      search =\n        parser.filter.length === 1 && parser.or.length === 1\n          ? [\n              {\n                $or: [\n                  parser.convertFilterToSearch(parser.filter[0]),\n                  parser.convertFilterToSearch(parser.or[0]),\n                ],\n              },\n            ]\n          : [\n              {\n                $or: [\n                  { $and: parser.filter.map(parser.convertFilterToSearch) },\n                  { $and: parser.or.map(parser.convertFilterToSearch) },\n                ],\n              },\n            ];\n    } else if (parser.filter.length > 0) {\n      search = parser.filter.map(parser.convertFilterToSearch);\n    } else {\n      if (parser.or.length > 0) {\n        search =\n          parser.or.length === 1\n            ? [parser.convertFilterToSearch(parser.or[0])]\n            : [\n                {\n                  $or: parser.or.map(parser.convertFilterToSearch),\n                },\n              ];\n      }\n    }\n\n    return [...paramsSearch, ...optionsFilter, ...search];\n  }\n\n  getParamsSearch(\n    parser: QueryParserService,\n    crudOptions: Partial<MergedCrudOptions>,\n    params?: any\n  ): SCondition[] {\n    if (params) {\n      parser.parseParams(params, <ParamsOptions>crudOptions.params);\n\n      return isArrayFull(parser.paramsFilter)\n        ? // @ts-ignore\n          parser.paramsFilter.map(parser.convertFilterToSearch)\n        : [];\n    }\n\n    return [];\n  }\n\n  getAuth(\n    parser: QueryParserService,\n    crudOptions: Partial<MergedCrudOptions>,\n    req: any\n  ): { filter?: any; or?: any; auth?: any } {\n    const auth: any = {};\n\n    /* istanbul ignore else */\n    if (crudOptions.auth) {\n      const userOrRequest = crudOptions.auth.property\n        ? req[crudOptions.auth.property]\n        : req;\n\n      if (crudOptions.auth.property && req[crudOptions.auth.property]) {\n        if (typeof req[crudOptions.auth.property] === \"object\") {\n          if (Object.keys(req[crudOptions.auth.property]).length > 0) {\n            auth.auth = req[crudOptions.auth.property];\n          }\n        } else {\n          auth.auth = req[crudOptions.auth.property];\n        }\n      }\n\n      if (isFunction(crudOptions.auth.or)) {\n        auth.or = crudOptions.auth.or(userOrRequest);\n      }\n\n      if (isFunction(crudOptions.auth.filter) && !auth.or) {\n        auth.filter = crudOptions.auth.filter(userOrRequest) || {};\n      }\n\n      if (isFunction(crudOptions.auth.persist)) {\n        parser.setAuthPersist(crudOptions.auth.persist(userOrRequest));\n      }\n\n      const options: ClassTransformOptions = {};\n      if (isFunction(crudOptions.auth.classTransformOptions)) {\n        Object.assign(\n          options,\n          crudOptions.auth.classTransformOptions(userOrRequest)\n        );\n      }\n\n      if (isFunction(crudOptions.auth.groups)) {\n        options.groups = crudOptions.auth.groups(userOrRequest);\n      }\n      parser.setClassTransformOptions(options);\n    }\n\n    return auth;\n  }\n}\n","import { ExecutionContext, Type } from \"@nestjs/common\";\nimport { R } from \"../helpers\";\nimport { CrudActions } from \"../enums\";\nimport { MergedCrudOptions } from \"../interfaces\";\n\nexport class CrudBaseInterceptor {\n  protected getCrudInfo(context: ExecutionContext): {\n    ctrlOptions: MergedCrudOptions;\n    crudOptions: Partial<MergedCrudOptions>;\n    action: CrudActions;\n  } {\n    const ctrl: Type<any> = context.getClass();\n    const handler = context.getHandler();\n    const ctrlOptions: MergedCrudOptions = R.getCrudOptions(ctrl);\n    const crudOptions = ctrlOptions\n      ? ctrlOptions\n      : {\n          query: {},\n          routes: {},\n          params: {},\n          operators: {},\n        };\n    const action: CrudActions = R.getAction(handler);\n\n    return { ctrlOptions, crudOptions, action };\n  }\n}\n","import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { isPlainObject, isEmpty, isFunction } from \"lodash\";\nimport { isFalse } from \"../helpers\";\nimport { ClassTransformOptions, instanceToPlain } from \"class-transformer\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { CrudActions } from \"../enums\";\nimport { MergedCrudOptions, SerializeOptions } from \"../interfaces\";\nimport { CrudBaseInterceptor } from \"./crud-base.interceptor\";\nimport { isObject } from \"class-validator\";\n\nconst actionToDtoNameMap: {\n  [key in CrudActions]: keyof SerializeOptions;\n} = {\n  [CrudActions.ReadAll]: \"getMany\",\n  [CrudActions.ReadOne]: \"get\",\n  [CrudActions.CreateMany]: \"createMany\",\n  [CrudActions.CreateOne]: \"create\",\n  [CrudActions.UpdateOne]: \"update\",\n  [CrudActions.ReplaceOne]: \"replace\",\n  [CrudActions.DeleteAll]: \"delete\",\n  [CrudActions.DeleteOne]: \"delete\",\n  [CrudActions.RecoverOne]: \"recover\",\n};\n\n@Injectable()\nexport class CrudResponseInterceptor\n  extends CrudBaseInterceptor\n  implements NestInterceptor\n{\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    return next.handle().pipe(map((data) => this.serialize(context, data)));\n  }\n\n  protected transform(dto: any, data: any, options: ClassTransformOptions) {\n    if (!isObject(data) || isFalse(dto)) {\n      return data;\n    }\n\n    if (!isFunction(dto)) {\n      return data.constructor !== Object\n        ? instanceToPlain(data, options)\n        : data;\n    }\n\n    return data instanceof dto\n      ? instanceToPlain(data, options)\n      : /* @ts-ignore */\n        instanceToPlain(Object.assign(new dto(), data), options);\n  }\n\n  protected serialize(context: ExecutionContext, data: any): any {\n    const req = context.switchToHttp().getRequest();\n    const { crudOptions, action } = this.getCrudInfo(context);\n    const { serialize } = <Partial<MergedCrudOptions>>crudOptions;\n    /* @ts-ignore */\n    const dto = serialize[actionToDtoNameMap[action]];\n    const isArray: boolean = Array.isArray(data);\n\n    const options: ClassTransformOptions = {};\n\n    if (isFunction(crudOptions.auth?.classTransformOptions)) {\n      const userOrRequest = crudOptions.auth?.property\n        ? req[crudOptions.auth.property]\n        : req;\n      Object.assign(\n        options,\n        crudOptions.auth?.classTransformOptions(userOrRequest)\n      );\n    }\n\n    if (isFunction(crudOptions.auth?.groups)) {\n      const userOrRequest = crudOptions.auth?.property\n        ? req[crudOptions.auth.property]\n        : req;\n      options.groups = crudOptions.auth?.groups(userOrRequest);\n    }\n\n    switch (action) {\n      case CrudActions.ReadAll:\n        return isArray\n          ? (data as any[]).map((item) =>\n              this.transform(serialize?.get, item, options)\n            )\n          : this.transform(dto, data, options);\n      case CrudActions.CreateMany:\n        return isArray\n          ? (data as any[]).map((item) => this.transform(dto, item, options))\n          : this.transform(dto, data, options);\n      default:\n        return this.transform(dto, data, options);\n    }\n  }\n}\n","module.exports = require(\"rxjs/operators\");","\n\nimport { oO } from \"@zmotivat0r/o0\";\nimport { plainToInstance } from \"class-transformer\";\nimport { isEmpty, isNil, isNull, isUndefined } from \"lodash\";\nimport {\n  BaseEntity,\n  Brackets,\n  ConnectionOptions,\n  DeepPartial,\n  EntityMetadata,\n  ObjectLiteral,\n  Repository,\n  SelectQueryBuilder,\n  WhereExpressionBuilder,\n} from \"typeorm\";\nimport { ColumnMetadata } from \"typeorm/metadata/ColumnMetadata\";\nimport { RelationMetadata } from \"typeorm/metadata/RelationMetadata\";\n\nimport { isArrayFull, isObject } from \"../helpers\";\nimport {\n  CreateManyDto,\n  CrudRequest,\n  CrudRequestOptions,\n  CustomOperators,\n  DeleteOneRouteOptions,\n  GetManyDefaultResponse,\n  JoinOption,\n  JoinOptions,\n  ParsedRequestParams,\n  QueryOptions,\n  ReplaceOneRouteOptions,\n  UpdateOneRouteOptions,\n} from \"../interfaces\";\nimport {\n  ClassType,\n  ComparisonOperator,\n  CondOperator,\n  QueryFilter,\n  QueryJoin,\n  QuerySort,\n  SCondition,\n  SConditionKey,\n} from \"../types\";\n\nimport { CrudService } from \"./abstract-crud.service\";\n\ninterface IAllowedRelation {\n  alias?: string;\n  nested: boolean;\n  name: string;\n  path: string;\n  columns: string[];\n  primaryColumns: string[];\n  allowedColumns: string[];\n}\n\nexport class TypeOrmCrudService<T extends BaseEntity> extends CrudService<\n  T,\n  DeepPartial<T>\n> {\n  protected dbName: ConnectionOptions[\"type\"];\n  protected entityColumns: string[] | undefined;\n  protected entityPrimaryColumns: string[] | undefined;\n  protected entityHasDeleteColumn = false;\n  protected entityColumnsHash: ObjectLiteral = {};\n  protected entityRelationsHash: Map<string, IAllowedRelation> = new Map();\n  protected sqlInjectionRegEx: RegExp[] = [\n    /(%27)|(')|(--)|(%23)|(#)/gi,\n    /((%3D)|(=))[^\\n]*((%27)|(')|(--)|(%3B)|(;))/gi,\n    /w*((%27)|('))((%6F)|o|(%4F))((%72)|r|(%52))/gi,\n    /((%27)|('))union/gi,\n  ];\n\n  constructor(protected repo: Repository<T>) {\n    super();\n\n    this.dbName = this.repo.metadata.connection.options.type;\n    this.onInitMapEntityColumns();\n  }\n\n  public get findOne(): Repository<T>[\"findOne\"] {\n    return this.repo.findOne.bind(this.repo);\n  }\n\n  public get findOneBy(): Repository<T>[\"findOneBy\"] {\n    return this.repo.findOneBy.bind(this.repo);\n  }\n\n  public get find(): Repository<T>[\"find\"] {\n    return this.repo.find.bind(this.repo);\n  }\n\n  public get count(): Repository<T>[\"count\"] {\n    return this.repo.count.bind(this.repo);\n  }\n\n  protected get entityType(): ClassType<T> {\n    return this.repo.target as ClassType<T>;\n  }\n\n  protected get alias(): string {\n    return this.repo.metadata.targetName;\n  }\n\n  /**\n   * Get many\n   * @param req\n   */\n  public async getMany(\n    req: CrudRequest\n  ): Promise<GetManyDefaultResponse<T> | T[]> {\n    const { parsed, options } = req;\n    const builder: SelectQueryBuilder<T> = await this.createBuilder(\n      parsed,\n      options\n    );\n\n    return this.doGetMany(builder, parsed, options);\n  }\n\n  /**\n   * Get one\n   * @param req\n   */\n  public async getOne(req: CrudRequest): Promise<T> {\n    return this.getOneOrFail(req);\n  }\n\n  /**\n   * Create one\n   * @param req\n   * @param dto\n   */\n  public async createOne(req: CrudRequest, dto: DeepPartial<T>): Promise<T> {\n    // @ts-ignore\n    const { returnShallow } = req.options.routes?.createOneBase;\n    const entity = this.prepareEntityBeforeSave(dto, req.parsed);\n\n    /* istanbul ignore if */\n    if (!entity) {\n      this.throwBadRequestException(`Empty data. Nothing to save.`);\n    }\n\n    const saved = await this.repo.save<any>(entity);\n\n    if (returnShallow) {\n      return saved;\n    } else {\n      const primaryParams = this.getPrimaryParams(req.options);\n\n      if (\n        isEmpty(primaryParams) &&\n        primaryParams.some((p) => isNil(saved[p]))\n      ) {\n        return saved;\n      } else {\n        req.parsed.search = primaryParams.reduce(\n          (acc, p) => ({ ...acc, [p]: saved[p] }),\n          {}\n        );\n        return this.getOneOrFail(req);\n      }\n    }\n  }\n\n  /**\n   * Create many\n   * @param req\n   * @param dto\n   */\n  public async createMany(\n    req: CrudRequest,\n    dto: CreateManyDto<DeepPartial<T>>\n  ): Promise<T[]> {\n    /* istanbul ignore if */\n    if (!isObject(dto) || !isArrayFull(dto.bulk)) {\n      this.throwBadRequestException(`Empty data. Nothing to save.`);\n    }\n\n    const bulk = dto.bulk\n      .map((one) => this.prepareEntityBeforeSave(one, req.parsed))\n      .filter((d) => !isUndefined(d));\n\n    /* istanbul ignore if */\n    if (!bulk.length) {\n      this.throwBadRequestException(`Empty data. Nothing to save.`);\n    }\n\n    return this.repo.save<any>(bulk, { chunk: 50 });\n  }\n\n  /**\n   * Update one\n   * @param req\n   * @param dto\n   */\n  public async updateOne(req: CrudRequest, dto: DeepPartial<T>): Promise<T> {\n    const { allowParamsOverride, returnShallow } = <UpdateOneRouteOptions>(\n      req.options.routes?.updateOneBase\n    );\n    const paramsFilters = this.getParamFilters(req.parsed);\n    // disable cache while updating\n    // @ts-ignore\n    req.options.query.cache = false;\n    const found = await this.getOneOrFail(req, returnShallow);\n\n    const toSave = !allowParamsOverride\n      ? { ...found, ...dto, ...paramsFilters, ...req.parsed.authPersist }\n      : { ...found, ...dto, ...req.parsed.authPersist };\n    const updated = await this.repo.save(\n      plainToInstance(\n        this.entityType,\n        toSave,\n        req.parsed.classTransformOptions\n      ) as unknown as DeepPartial<T>\n    );\n\n    if (returnShallow) {\n      return updated;\n    } else {\n      req.parsed.paramsFilter.forEach((filter) => {\n        // @ts-ignore\n        filter.value = updated[filter.field];\n      });\n\n      return this.getOneOrFail(req);\n    }\n  }\n\n  /**\n   * Recover one\n   * @param req\n   * @param dto\n   */\n  public async recoverOne(req: CrudRequest): Promise<T> {\n    // disable cache while recovering\n    // @ts-ignore\n    req.options.query.cache = false;\n    const found = await this.getOneOrFail(req, false, true);\n    return this.repo.recover(found as DeepPartial<T>);\n  }\n\n  /**\n   * Replace one\n   * @param req\n   * @param dto\n   */\n  public async replaceOne(req: CrudRequest, dto: DeepPartial<T>): Promise<T> {\n    const { allowParamsOverride, returnShallow } = <ReplaceOneRouteOptions>(\n      req.options.routes?.replaceOneBase\n    );\n    const paramsFilters = this.getParamFilters(req.parsed);\n    // disable cache while replacing\n    // @ts-ignore\n    req.options.query.cache = false;\n    const [_, found] = await oO(this.getOneOrFail(req, returnShallow));\n    const toSave = !allowParamsOverride\n      ? {\n          ...(found || {}),\n          ...dto,\n          ...paramsFilters,\n          ...req.parsed.authPersist,\n        }\n      : {\n          ...(found || {}),\n          ...paramsFilters,\n          ...dto,\n          ...req.parsed.authPersist,\n        };\n    const replaced = await this.repo.save(\n      plainToInstance(\n        this.entityType,\n        toSave,\n        req.parsed.classTransformOptions\n      ) as unknown as DeepPartial<T>\n    );\n\n    if (returnShallow) {\n      return replaced;\n    } else {\n      const primaryParams: string[] = this.getPrimaryParams(req.options);\n\n      /* istanbul ignore if */\n      if (!primaryParams.length) {\n        return replaced;\n      }\n\n      req.parsed.search = primaryParams.reduce(\n        (acc: {}, p: string) => ({\n          ...acc,\n          // @ts-ignore\n          [p]: replaced[p],\n        }),\n        {}\n      );\n      return this.getOneOrFail(req);\n    }\n  }\n\n  /**\n   * Delete one\n   * @param req\n   */\n  public async deleteOne(req: CrudRequest): Promise<void | T> {\n    const { returnDeleted } = <DeleteOneRouteOptions>(\n      req.options.routes?.deleteOneBase\n    );\n    // disable cache while deleting\n    // @ts-ignore\n    req.options.query.cache = false;\n    const found: T = await this.getOneOrFail(req, returnDeleted);\n    const toReturn: T | undefined = returnDeleted\n      ? plainToInstance(\n          this.entityType,\n          { ...found },\n          req.parsed.classTransformOptions\n        )\n      : undefined;\n\n    const deleted: DeepPartial<T> & T =\n      req.options.query?.softDelete === true\n        ? await this.repo.softRemove(found as DeepPartial<T>)\n        : await this.repo.remove(found);\n\n    return toReturn;\n  }\n\n  public getParamFilters(parsed: CrudRequest[\"parsed\"]): ObjectLiteral {\n    const filters = {};\n\n    if (!isEmpty(parsed.paramsFilter)) {\n      for (const filter of parsed.paramsFilter) {\n        // @ts-ignore\n        filters[filter.field] = filter.value;\n      }\n    }\n\n    return filters;\n  }\n\n  /**\n   * Create TypeOrm QueryBuilder\n   * @param parsed\n   * @param options\n   * @param many\n   * @param withDeleted\n   */\n  public async createBuilder(\n    parsed: ParsedRequestParams,\n    options: CrudRequestOptions,\n    many = true,\n    withDeleted = false\n  ): Promise<SelectQueryBuilder<T>> {\n    // create query builder\n    const builder: SelectQueryBuilder<T> = this.repo.createQueryBuilder(\n      this.alias\n    );\n    // get select fields\n    const select: string[] = this.getSelect(parsed, options.query || {});\n    // select fields\n    builder.select(select);\n\n    // if soft deleted is enabled add where statement to filter deleted records\n    if (options.query?.softDelete) {\n      if (parsed.includeDeleted === 1 || withDeleted) {\n        builder.withDeleted();\n      }\n    }\n\n    // search\n    this.setSearchCondition(\n      builder,\n      parsed.search || {},\n      options.operators?.custom || {}\n    );\n\n    // set joins\n    const joinOptions: JoinOptions = options.query?.join || {};\n    const allowedJoins: string[] = Object.keys(joinOptions);\n\n    if (!isEmpty(allowedJoins)) {\n      const eagerJoins: any = {};\n\n      for (let i = 0; i < allowedJoins.length; i++) {\n        if (joinOptions[allowedJoins[i]].eager) {\n          const cond: QueryJoin = parsed.join.find(\n            (j: QueryJoin) => j && j.field === allowedJoins[i]\n          ) || {\n            field: allowedJoins[i],\n          };\n          this.setJoin(cond, joinOptions, builder);\n          eagerJoins[allowedJoins[i]] = true;\n        }\n      }\n\n      if (isArrayFull(parsed.join)) {\n        for (let i = 0; i < parsed.join.length; i++) {\n          if (!eagerJoins[parsed.join[i].field]) {\n            this.setJoin(parsed.join[i], joinOptions, builder);\n          }\n        }\n      }\n    }\n\n    if (many) {\n      // set sort (order by)\n      const sort = this.getSort(parsed, options.query || {});\n      builder.orderBy(sort);\n\n      // set take\n      const take = this.getTake(parsed, options.query || {});\n\n      if (take && isFinite(take)) {\n        builder.take(take);\n      }\n\n      // set skip\n      const skip = this.getSkip(parsed, take || 0);\n\n      if (skip && isFinite(skip)) {\n        builder.skip(skip);\n      }\n    }\n\n    // set cache\n\n    if (options.query?.cache && parsed.cache !== 0) {\n      builder.cache(options.query.cache);\n    }\n\n    return builder;\n  }\n\n  /**\n   * depends on paging call `SelectQueryBuilder#getMany` or `SelectQueryBuilder#getManyAndCount`\n   * helpful for overriding `TypeOrmCrudService#getMany`\n   * @see getMany\n   * @see SelectQueryBuilder#getMany\n   * @see SelectQueryBuilder#getManyAndCount\n   * @param builder\n   * @param query\n   * @param options\n   */\n  protected async doGetMany(\n    builder: SelectQueryBuilder<T>,\n    query: ParsedRequestParams,\n    options: CrudRequestOptions\n  ): Promise<GetManyDefaultResponse<T> | T[]> {\n    if (this.decidePagination(query, options)) {\n      const [data, total] = await builder.getManyAndCount();\n      const limit: number | undefined = builder.expressionMap.take;\n      const offset: number | undefined = builder.expressionMap.skip;\n\n      return this.createPageInfo(data, total, limit || total, offset || 0);\n    }\n\n    return builder.getMany();\n  }\n\n  protected onInitMapEntityColumns(): void {\n    this.entityColumns = this.repo.metadata.columns.map(\n      (prop: ColumnMetadata): string => {\n        // In case column is an embedded, use the propertyPath to get complete path\n        if (prop.embeddedMetadata) {\n          this.entityColumnsHash[prop.propertyPath] = prop.databasePath;\n          return prop.propertyPath;\n        }\n        this.entityColumnsHash[prop.propertyName] = prop.databasePath;\n        return prop.propertyName;\n      }\n    );\n    this.entityPrimaryColumns = this.repo.metadata.columns\n      .filter((prop: ColumnMetadata) => prop.isPrimary)\n      .map((prop: ColumnMetadata) => prop.propertyName);\n    this.entityHasDeleteColumn = this.repo.metadata.columns.some(\n      (prop: ColumnMetadata) => !isEmpty(prop.isDeleteDate)\n    );\n  }\n\n  protected async getOneOrFail(\n    req: CrudRequest,\n    shallow = false,\n    withDeleted = false\n  ): Promise<T> {\n    const { parsed, options } = req;\n    const builder: SelectQueryBuilder<T> = shallow\n      ? this.repo.createQueryBuilder(this.alias)\n      : await this.createBuilder(parsed, options, true, withDeleted);\n\n    if (shallow) {\n      this.setSearchCondition(\n        builder,\n        parsed.search || null,\n        <CustomOperators>options.operators?.custom\n      );\n    }\n\n    const found: T | null = withDeleted\n      ? await builder.withDeleted().getOne()\n      : await builder.getOne();\n\n    if (!found) {\n      this.throwNotFoundException(this.alias);\n    }\n\n    return <T>found;\n  }\n\n  protected prepareEntityBeforeSave(\n    dto: DeepPartial<T>,\n    parsed: CrudRequest[\"parsed\"]\n  ): T | undefined {\n    /* istanbul ignore if */\n    if (!isObject(dto)) {\n      return undefined;\n    }\n\n    if (!isEmpty(parsed.paramsFilter)) {\n      for (const filter of parsed.paramsFilter) {\n        // @ts-ignore\n        dto[filter.field] = filter.value;\n      }\n    }\n\n    /* istanbul ignore if */\n    if (isEmpty(Object.keys(dto))) {\n      return undefined;\n    }\n\n    return dto instanceof this.entityType\n      ? Object.assign(dto, parsed.authPersist)\n      : plainToInstance(\n          this.entityType,\n          { ...dto, ...parsed.authPersist },\n          parsed.classTransformOptions\n        );\n  }\n\n  protected getAllowedColumns(\n    columns: string[],\n    options: QueryOptions\n  ): string[] {\n    return (!options.exclude || !options.exclude.length) &&\n      (!options.allow || !options.allow.length)\n      ? columns\n      : columns.filter(\n          (column: string) =>\n            (options.exclude && options.exclude.length\n              ? !options.exclude.some((col: string) => col === column)\n              : true) &&\n            (options.allow && options.allow.length\n              ? options.allow.some((col) => col === column)\n              : true)\n        );\n  }\n\n  protected getEntityColumns(entityMetadata: EntityMetadata): {\n    columns: string[];\n    primaryColumns: string[];\n  } {\n    const columns: string[] =\n      entityMetadata.columns.map((prop: ColumnMetadata) => prop.propertyPath) ||\n      [];\n    const primaryColumns: string[] =\n      entityMetadata.primaryColumns.map(\n        (prop: ColumnMetadata) => prop.propertyPath\n      ) || [];\n\n    return { columns, primaryColumns };\n  }\n\n  protected getRelationMetadata(\n    field: string,\n    options: JoinOption\n  ): IAllowedRelation | null {\n    try {\n      let allowedRelation;\n      let nested = false;\n\n      if (this.entityRelationsHash.has(field)) {\n        allowedRelation = this.entityRelationsHash.get(field);\n      } else {\n        const fields: string[] = field.split(\".\");\n        let relationMetadata: EntityMetadata | null = null;\n        let name: string | undefined;\n        let path: string | undefined;\n        let parentPath: string | undefined;\n\n        if (fields.length === 1) {\n          const found: RelationMetadata | undefined =\n            this.repo.metadata.relations.find(\n              (one: RelationMetadata): boolean => one.propertyName === fields[0]\n            );\n\n          if (found) {\n            name = fields[0];\n            path = `${this.alias}.${fields[0]}`;\n            relationMetadata = found.inverseEntityMetadata;\n          }\n        } else {\n          nested = true;\n          parentPath = \"\";\n\n          const reduced = fields.reduce(\n            // @ts-ignore\n            (res, propertyName: string, i) => {\n              const found = res.relations?.length\n                ? res.relations.find(\n                    (one: RelationMetadata): boolean =>\n                      one.propertyName === propertyName\n                  )\n                : null;\n              relationMetadata = found ? found.inverseEntityMetadata : null;\n              const relations: RelationMetadata[] = relationMetadata\n                ? relationMetadata.relations\n                : [];\n              name = propertyName;\n\n              if (i !== fields.length - 1) {\n                parentPath = !parentPath\n                  ? propertyName\n                  : `${parentPath}.${propertyName}`;\n              }\n\n              return {\n                relations,\n                relationMetadata,\n              };\n            },\n            {\n              relations: this.repo.metadata.relations,\n              relationMetadata: null,\n            }\n          );\n\n          // @ts-ignore\n          relationMetadata = reduced.relationMetadata;\n        }\n\n        // @ts-ignore\n        if (relationMetadata) {\n          const { columns, primaryColumns } =\n            this.getEntityColumns(relationMetadata);\n\n          if (!path && parentPath) {\n            const parentAllowedRelation: IAllowedRelation | undefined =\n              this.entityRelationsHash.get(parentPath);\n\n            if (parentAllowedRelation) {\n              path = parentAllowedRelation.alias\n                ? `${parentAllowedRelation.alias}.${name}`\n                : field;\n            }\n          }\n\n          allowedRelation = {\n            alias: options.alias,\n            name,\n            path,\n            columns,\n            nested,\n            primaryColumns,\n          };\n        }\n      }\n\n      if (allowedRelation) {\n        const allowedColumns: string[] = this.getAllowedColumns(\n          allowedRelation.columns,\n          options\n        );\n        const toSave: IAllowedRelation = <IAllowedRelation>{\n          ...allowedRelation,\n          allowedColumns,\n        };\n\n        this.entityRelationsHash.set(field, toSave);\n\n        if (options.alias) {\n          this.entityRelationsHash.set(options.alias, toSave);\n        }\n\n        return toSave;\n      }\n    } catch (_) {\n      return null;\n    }\n    return null;\n  }\n\n  protected setJoin(\n    cond: QueryJoin,\n    joinOptions: JoinOptions,\n    builder: SelectQueryBuilder<T>\n  ): undefined | void {\n    const options: JoinOption = joinOptions[cond.field] ?? null;\n\n    if (!options) {\n      console.warn(\n        'relation \"' +\n          cond.field +\n          '\" not found in allowed relations in the controller. Did you mean to use one of these? [' +\n          Object.keys(joinOptions).join(\", \") +\n          \"]\"\n      );\n      return;\n    }\n\n    const allowedRelation: IAllowedRelation | null = this.getRelationMetadata(\n      cond.field,\n      options\n    );\n\n    if (!allowedRelation) {\n      return;\n    }\n\n    const relationType = options.required ? \"innerJoin\" : \"leftJoin\";\n    const alias: string = options.alias ? options.alias : allowedRelation.name;\n\n    builder[relationType](allowedRelation.path, alias);\n\n    if (options.select !== false) {\n      const columns = isArrayFull(cond.select)\n        ? cond.select?.filter((column: string) =>\n            allowedRelation.allowedColumns.some(\n              (allowed: string): boolean => allowed === column\n            )\n          ) || []\n        : allowedRelation.allowedColumns || [];\n\n      const select: string[] = [\n        ...allowedRelation.primaryColumns,\n        // @ts-ignore\n        ...(isArrayFull(options.persist) ? options.persist : []),\n        ...columns,\n      ].map((col): string => `${alias}.${col}`);\n\n      builder.addSelect(Array.from(new Set(select)));\n    }\n  }\n\n  protected setAndWhere(\n    cond: QueryFilter,\n    i: any,\n    builder: SelectQueryBuilder<T> | WhereExpressionBuilder,\n    customOperators: CustomOperators\n  ): void {\n    const { str, params } = this.mapOperatorsToQuery(\n      cond,\n      `andWhere${i}`,\n      customOperators\n    );\n    builder.andWhere(str, params);\n  }\n\n  protected setOrWhere(\n    cond: QueryFilter,\n    i: any,\n    builder: SelectQueryBuilder<T> | WhereExpressionBuilder,\n    customOperators: CustomOperators\n  ): void {\n    const { str, params } = this.mapOperatorsToQuery(\n      cond,\n      `orWhere${i}`,\n      customOperators\n    );\n    builder.orWhere(str, params);\n  }\n\n  protected setSearchCondition(\n    builder: SelectQueryBuilder<T>,\n    search: SCondition | null,\n    customOperators: CustomOperators,\n    condition: SConditionKey = \"$and\"\n  ): void {\n    if (isObject(search)) {\n      const keys = Object.keys(<SCondition>search);\n\n      if (keys.length) {\n        // search: {$ne: [...]}\n        // @ts-ignore\n        if (isArrayFull(search?.$ne)) {\n          this.builderAddBrackets(\n            builder,\n            condition,\n            new Brackets((qb: any): void => {\n              // @ts-ignore\n              search.$not.forEach((item: any): void => {\n                this.setSearchCondition(qb, item, customOperators, \"$and\");\n              });\n            }),\n            true\n          );\n        }\n        // search: {$and: [...], ...}\n        else if (isArrayFull(search?.$and)) {\n          // search: {$and: [{}]}\n          if (search?.$and?.length === 1) {\n            this.setSearchCondition(\n              builder,\n              search.$and[0],\n              customOperators,\n              condition\n            );\n          }\n          // search: {$and: [{}, {}, ...]}\n          else {\n            this.builderAddBrackets(\n              builder,\n              condition,\n              new Brackets((qb: any): void => {\n                search?.$and?.forEach((item: any): void => {\n                  this.setSearchCondition(qb, item, customOperators, \"$and\");\n                });\n              })\n            );\n          }\n        }\n        // search: {$or: [...], ...}\n        else if (isArrayFull(search?.$or)) {\n          // search: {$or: [...]}\n          if (keys.length === 1) {\n            // search: {$or: [{}]}\n            if (search?.$or?.length === 1) {\n              this.setSearchCondition(\n                builder,\n                search.$or[0],\n                customOperators,\n                condition\n              );\n            }\n            // search: {$or: [{}, {}, ...]}\n            else {\n              this.builderAddBrackets(\n                builder,\n                condition,\n                new Brackets((qb: any) => {\n                  search?.$or?.forEach((item: any) => {\n                    this.setSearchCondition(qb, item, customOperators, \"$or\");\n                  });\n                })\n              );\n            }\n          }\n          // search: {$or: [...], foo, ...}\n          else {\n            this.builderAddBrackets(\n              builder,\n              condition,\n              new Brackets((qb: any): void => {\n                keys.forEach((field: string): void => {\n                  if (field !== \"$or\") {\n                    // @ts-ignore\n                    const value = search[field];\n                    if (!isObject(value)) {\n                      this.builderSetWhere(\n                        qb,\n                        \"$and\",\n                        field,\n                        value,\n                        customOperators\n                      );\n                    } else {\n                      this.setSearchFieldObjectCondition(\n                        qb,\n                        \"$and\",\n                        field,\n                        value,\n                        customOperators\n                      );\n                    }\n                  } else {\n                    if (search?.$or?.length === 1) {\n                      this.setSearchCondition(\n                        builder,\n                        search.$or[0],\n                        customOperators,\n                        \"$and\"\n                      );\n                    } else {\n                      this.builderAddBrackets(\n                        qb,\n                        \"$and\",\n                        new Brackets((qb2: any) => {\n                          search?.$or?.forEach((item: any) => {\n                            this.setSearchCondition(\n                              qb2,\n                              item,\n                              customOperators,\n                              \"$or\"\n                            );\n                          });\n                        })\n                      );\n                    }\n                  }\n                });\n              })\n            );\n          }\n        }\n        // search: {...}\n        else {\n          // search: {foo}\n          if (keys.length === 1) {\n            const field: string = keys[0];\n            // @ts-ignore\n            const value = search[field];\n            if (!isObject(value)) {\n              this.builderSetWhere(\n                builder,\n                condition,\n                field,\n                value,\n                customOperators\n              );\n            } else {\n              this.setSearchFieldObjectCondition(\n                builder,\n                condition,\n                field,\n                value,\n                customOperators\n              );\n            }\n          }\n          // search: {foo, ...}\n          else {\n            this.builderAddBrackets(\n              builder,\n              condition,\n              new Brackets((qb: any) => {\n                keys.forEach((field: string) => {\n                  // @ts-ignore\n                  const value = search[field];\n                  if (!isObject(value)) {\n                    this.builderSetWhere(\n                      qb,\n                      \"$and\",\n                      field,\n                      value,\n                      customOperators\n                    );\n                  } else {\n                    this.setSearchFieldObjectCondition(\n                      qb,\n                      \"$and\",\n                      field,\n                      value,\n                      customOperators\n                    );\n                  }\n                });\n              })\n            );\n          }\n        }\n      }\n    }\n  }\n\n  protected builderAddBrackets(\n    builder: SelectQueryBuilder<T>,\n    condition: SConditionKey,\n    brackets: Brackets,\n    negated = false\n  ) {\n    if (negated) {\n      // No builtin support for not, this is copied from QueryBuilder.getWhereCondition\n\n      const whereQueryBuilder: SelectQueryBuilder<T> =\n        builder.createQueryBuilder();\n\n      (whereQueryBuilder as any).parentQueryBuilder = builder;\n\n      whereQueryBuilder.expressionMap.mainAlias =\n        builder.expressionMap.mainAlias;\n      whereQueryBuilder.expressionMap.aliasNamePrefixingEnabled =\n        builder.expressionMap.aliasNamePrefixingEnabled;\n      whereQueryBuilder.expressionMap.parameters =\n        builder.expressionMap.parameters;\n      whereQueryBuilder.expressionMap.nativeParameters =\n        builder.expressionMap.nativeParameters;\n\n      whereQueryBuilder.expressionMap.wheres = [];\n\n      brackets.whereFactory(whereQueryBuilder as any);\n\n      const wheres = {\n        operator: \"brackets\",\n        condition: whereQueryBuilder.expressionMap.wheres,\n      };\n\n      const type =\n        condition === \"$and\" ? \"and\" : condition === \"$or\" ? \"or\" : \"simple\";\n      builder.expressionMap.wheres.push({\n        type,\n        condition: {\n          operator: \"not\",\n          condition: wheres as any,\n        },\n      });\n    } else if (condition === \"$and\") {\n      builder.andWhere(brackets);\n    } else {\n      builder.orWhere(brackets);\n    }\n  }\n\n  protected builderSetWhere(\n    builder: SelectQueryBuilder<T>,\n    condition: SConditionKey,\n    field: string,\n    value: any,\n    customOperators: CustomOperators,\n    operator: ComparisonOperator = \"$eq\"\n  ): void {\n    const time = process.hrtime();\n    // const index = `${field}${time[0]}${time[1]}`;\n    /**\n     * Correcting the Error [Invalid Column Name] or [ syntax error at or near \\\":\\\".]\n     * When using filter or search in relational/nested entities.\n     */\n    const safeFieldName = field.replace(/./g, \"_\");\n    const index = `${safeFieldName}${time[0]}${time[1]}`;\n\n    const args = [\n      { field, operator: isNull(value) ? \"$isnull\" : operator, value },\n      index,\n      builder,\n      customOperators,\n    ];\n    const fn = condition === \"$and\" ? this.setAndWhere : this.setOrWhere;\n    // @ts-ignore\n    fn.apply(this, args);\n  }\n\n  protected setSearchFieldObjectCondition(\n    builder: SelectQueryBuilder<T>,\n    condition: SConditionKey,\n    field: string,\n    object: any,\n    customOperators: CustomOperators\n  ): void {\n    if (isObject(object)) {\n      const operators: string[] = Object.keys(object);\n\n      if (operators.length === 1) {\n        const operator: string = operators[0] as ComparisonOperator;\n        const value = object[operator];\n\n        if (isObject(object.$or)) {\n          const orKeys: string[] = Object.keys(object.$or);\n          this.setSearchFieldObjectCondition(\n            builder,\n            orKeys.length === 1 ? condition : \"$or\",\n            field,\n            object.$or,\n            customOperators\n          );\n        } else {\n          this.builderSetWhere(\n            builder,\n            condition,\n            field,\n            value,\n            customOperators,\n            operator\n          );\n        }\n      } else {\n        if (operators.length > 1) {\n          this.builderAddBrackets(\n            builder,\n            condition,\n            new Brackets((qb: any): void => {\n              operators.forEach((operator: ComparisonOperator): void => {\n                const value = object[operator];\n\n                if (operator !== \"$or\") {\n                  this.builderSetWhere(\n                    qb,\n                    condition,\n                    field,\n                    value,\n                    customOperators,\n                    operator\n                  );\n                } else {\n                  const orKeys: string[] = Object.keys(object.$or);\n\n                  if (orKeys.length === 1) {\n                    this.setSearchFieldObjectCondition(\n                      qb,\n                      condition,\n                      field,\n                      object.$or,\n                      customOperators\n                    );\n                  } else {\n                    this.builderAddBrackets(\n                      qb,\n                      condition,\n                      new Brackets((qb2: any) => {\n                        this.setSearchFieldObjectCondition(\n                          qb2,\n                          \"$or\",\n                          field,\n                          object.$or,\n                          customOperators\n                        );\n                      })\n                    );\n                  }\n                }\n              });\n            })\n          );\n        }\n      }\n    }\n  }\n\n  protected getSelect(\n    query: ParsedRequestParams,\n    options: QueryOptions\n  ): string[] {\n    const allowed: string[] = this.getAllowedColumns(\n      this.entityColumns || [],\n      options\n    );\n    const columns =\n      query.fields && query.fields.length\n        ? query.fields.filter((field) =>\n            allowed.some((col: string): boolean => field === col)\n          )\n        : allowed;\n    return [\n      ...new Set([\n        ...(options.persist && options.persist.length ? options.persist : []),\n        ...columns,\n        ...(this.entityPrimaryColumns || []),\n      ]),\n    ].map((col): string => `${this.alias}.${col}`);\n  }\n\n  protected getSort(query: ParsedRequestParams, options: QueryOptions) {\n    return query.sort && query.sort.length\n      ? this.mapSort(query.sort)\n      : options.sort && options.sort.length\n      ? this.mapSort(options.sort)\n      : {};\n  }\n\n  protected getFieldWithAlias(field: string, sort = false) {\n    const i = [\"mysql\", \"mariadb\"].includes(this.dbName) ? \"`\" : '\"';\n    const cols = field.split(\".\");\n\n    switch (cols.length) {\n      case 1:\n        if (sort) {\n          return `${this.alias}.${field}`;\n        }\n\n        const dbColName =\n          this.entityColumnsHash[field] !== field\n            ? this.entityColumnsHash[field]\n            : field;\n\n        return `${i}${this.alias}${i}.${i}${dbColName}${i}`;\n      case 2:\n        return field;\n      default:\n        return cols.slice(cols.length - 2, cols.length).join(\".\");\n    }\n  }\n\n  protected mapSort(sort: QuerySort[]) {\n    const params: ObjectLiteral = {};\n\n    for (let i = 0; i < sort.length; i++) {\n      const field = this.getFieldWithAlias(sort[i].field, true);\n      const checkedFiled = this.checkSqlInjection(field);\n      params[checkedFiled] = sort[i].order;\n    }\n\n    return params;\n  }\n\n  protected mapOperatorsToQuery(\n    cond: QueryFilter,\n    param: any,\n    customOperators: CustomOperators = {}\n  ): { str: string; params: ObjectLiteral } {\n    const field: string = this.getFieldWithAlias(cond.field);\n    const likeOperator = this.dbName === \"postgres\" ? \"ILIKE\" : \"LIKE\";\n    let str: string | undefined;\n    let params: ObjectLiteral | undefined;\n\n    if (cond.operator[0] !== \"$\") {\n      cond.operator = (\"$\" + cond.operator) as ComparisonOperator;\n    }\n\n    switch (cond.operator) {\n      case CondOperator.EQUALS:\n        str = `${field} = :${param}`;\n        break;\n\n      case CondOperator.NOT_EQUALS:\n        str = `${field} != :${param}`;\n        break;\n\n      case CondOperator.GREATER_THAN:\n        str = `${field} > :${param}`;\n        break;\n\n      case CondOperator.LOWER_THAN:\n        str = `${field} < :${param}`;\n        break;\n\n      case CondOperator.GREATER_THAN_EQUALS:\n        str = `${field} >= :${param}`;\n        break;\n\n      case CondOperator.LOWER_THAN_EQUALS:\n        str = `${field} <= :${param}`;\n        break;\n\n      case CondOperator.STARTS:\n        str = `${field} LIKE :${param}`;\n        params = { [param]: `${cond.value}%` };\n        break;\n\n      case CondOperator.ENDS:\n        str = `${field} LIKE :${param}`;\n        params = { [param]: `%${cond.value}` };\n        break;\n\n      case CondOperator.CONTAINS:\n        str = `${field} LIKE :${param}`;\n        params = { [param]: `%${cond.value}%` };\n        break;\n\n      case CondOperator.EXCLUDES:\n        str = `${field} NOT LIKE :${param}`;\n        params = { [param]: `%${cond.value}%` };\n        break;\n\n      case CondOperator.IN:\n        this.checkFilterIsArray(cond);\n        str = `${field} IN (:...${param})`;\n        break;\n\n      case CondOperator.NOT_IN:\n        this.checkFilterIsArray(cond);\n        str = `${field} NOT IN (:...${param})`;\n        break;\n\n      case CondOperator.IS_NULL:\n        str = `${field} IS NULL`;\n        params = {};\n        break;\n\n      case CondOperator.NOT_NULL:\n        str = `${field} IS NOT NULL`;\n        params = {};\n        break;\n\n      case CondOperator.BETWEEN:\n        this.checkFilterIsArray(cond, cond.value.length !== 2);\n        str = `${field} BETWEEN :${param}0 AND :${param}1`;\n        params = {\n          [`${param}0`]: cond.value[0],\n          [`${param}1`]: cond.value[1],\n        };\n        break;\n\n      // case insensitive\n      case CondOperator.EQUALS_LOW:\n        str = `LOWER(${field}) = :${param}`;\n        break;\n\n      case CondOperator.NOT_EQUALS_LOW:\n        str = `LOWER(${field}) != :${param}`;\n        break;\n\n      case CondOperator.STARTS_LOW:\n        str = `LOWER(${field}) ${likeOperator} :${param}`;\n        params = { [param]: `${cond.value}%` };\n        break;\n\n      case CondOperator.ENDS_LOW:\n        str = `LOWER(${field}) ${likeOperator} :${param}`;\n        params = { [param]: `%${cond.value}` };\n        break;\n\n      case CondOperator.CONTAINS_LOW:\n        str = `LOWER(${field}) ${likeOperator} :${param}`;\n        params = { [param]: `%${cond.value}%` };\n        break;\n\n      case CondOperator.EXCLUDES_LOW:\n        str = `LOWER(${field}) NOT ${likeOperator} :${param}`;\n        params = { [param]: `%${cond.value}%` };\n        break;\n\n      case CondOperator.IN_LOW:\n        this.checkFilterIsArray(cond);\n        str = `LOWER(${field}) IN (:...${param})`;\n        break;\n\n      case CondOperator.NOT_IN_LOW:\n        this.checkFilterIsArray(cond);\n        str = `LOWER(${field}) NOT IN (:...${param})`;\n        break;\n\n      default:\n        break;\n    }\n\n    if (typeof params === \"undefined\") {\n      params = { [param]: cond.value };\n    }\n\n    return { str: <string>str, params };\n  }\n\n  protected checkFilterIsArray(cond: QueryFilter, withLength?: boolean) {\n    /* istanbul ignore if */\n    if (\n      !Array.isArray(cond.value) ||\n      !cond.value.length ||\n      (!isNil(withLength) ? withLength : false)\n    ) {\n      this.throwBadRequestException(`Invalid column '${cond.field}' value`);\n    }\n  }\n\n  protected checkSqlInjection(field: string): string {\n    if (this.sqlInjectionRegEx.length) {\n      for (let i = 0; i < this.sqlInjectionRegEx.length; i++) {\n        if (this.sqlInjectionRegEx[i].test(field)) {\n          this.throwBadRequestException(`SQL injection detected: \"${field}\"`);\n        }\n      }\n    }\n\n    return field;\n  }\n}\n","module.exports = require(\"@zmotivat0r/o0\");","module.exports = require(\"typeorm\");","import { R } from \"../helpers\";\nimport { AuthOptions } from \"../interfaces\";\n\nexport const CrudAuth =\n  (options: AuthOptions) =>\n  (target: Object): void => {\n    R.setCrudAuthOptions(options, target);\n  };\n","import { BaseRouteName } from \"../types\";\nimport { OVERRIDE_METHOD_METADATA } from \"../constants\";\n\nexport const Override =\n  (name?: BaseRouteName) =>\n  (target: any, key: any, descriptor: PropertyDescriptor) => {\n    Reflect.defineMetadata(\n      OVERRIDE_METHOD_METADATA,\n      name || `${key}Base`,\n      target[key]\n    );\n    return descriptor;\n  };\n","import { createParamDecorator } from \"@nestjs/common\";\n\nimport { PARSED_CRUD_REQUEST_KEY } from \"../constants\";\nimport { R } from \"../helpers\";\n\nexport const ParsedRequest = createParamDecorator(\n  (_, ctx): ParameterDecorator => {\n    return R.getContextRequest(ctx)[PARSED_CRUD_REQUEST_KEY];\n  }\n);\n","import { PARSED_BODY_METADATA } from \"../constants\";\n\nexport const ParsedBody =\n  () =>\n  (target: any, key: string, index: any): void => {\n    Reflect.defineMetadata(PARSED_BODY_METADATA, { index }, target[key]);\n  };\n","import { SetMetadata, Type } from \"@nestjs/common\";\n\nimport { ACTION_NAME_METADATA, FEATURE_NAME_METADATA } from \"../constants\";\n\nexport const Feature = (name: string) =>\n  SetMetadata(FEATURE_NAME_METADATA, name);\nexport const Action = (name: string) => SetMetadata(ACTION_NAME_METADATA, name);\n\nexport const getFeature = <T = any>(target: Type<T>) =>\n  Reflect.getMetadata(FEATURE_NAME_METADATA, target);\nexport const getAction = (target: Function) =>\n  Reflect.getMetadata(ACTION_NAME_METADATA, target);\n","export * from \"./auth-options.interface\";\nexport * from \"./base-route.interface\";\nexport * from \"./create-many-dto.interface\";\nexport * from \"./create-query-params.interface\";\nexport * from \"./crud-controller.interface\";\nexport * from \"./crud-global-config.interface\";\nexport * from \"./crud-options.interface\";\nexport * from \"./crud-request.interface\";\nexport * from \"./dto-options.interface\";\nexport * from \"./get-many-default-response.interface\";\nexport * from \"./model-options.interface\";\nexport * from \"./operators-options.interface\";\nexport * from \"./params-options.interface\";\nexport * from \"./parsed-request.interface\";\nexport * from \"./query-options.interface\";\nexport * from \"./request-query-builder-options.interface\";\nexport * from \"./routes-options.interface\";\nexport * from \"./serialize-options.interface\";\n","import { SCondition } from \"../types\";\nimport { ObjectLiteral } from \"../types\";\nimport { ClassTransformOptions } from \"class-transformer\";\n\nexport interface AuthGlobalOptions {\n  property?: string;\n  /** Get options for the `classToPlain` function (response) */\n  classTransformOptions?: (req: any) => ClassTransformOptions;\n  /** Get `groups` value for the `classToPlain` function options (response) */\n  groups?: (req: any) => string[];\n}\n\nexport interface AuthOptions {\n  property?: string;\n  /** Get options for the `classToPlain` function (response) */\n  classTransformOptions?: (req: any) => ClassTransformOptions;\n  /** Get `groups` value for the `classToPlain` function options (response) */\n  groups?: (req: any) => string[];\n  filter?: (req: any) => SCondition | void;\n  or?: (req: any) => SCondition | void;\n  persist?: (req: any) => ObjectLiteral;\n}\n","import { RequestMethod } from \"@nestjs/common\";\n\nimport { BaseRouteName } from \"../types\";\n\nexport interface BaseRoute {\n  name: BaseRouteName;\n  path: string;\n  method: RequestMethod;\n  enable: boolean;\n  override: boolean;\n  withParams: boolean;\n}\n","export interface CreateManyDto<T = any> {\n  bulk: T[];\n}\n","import {\n  QueryExtra,\n  QueryFields,\n  QueryFilter,\n  QueryFilterArr,\n  QueryJoin,\n  QueryJoinArr,\n  QuerySort,\n  QuerySortArr,\n  SCondition,\n} from \"../types\";\n\nexport interface CreateQueryParams {\n  fields?: QueryFields;\n  search?: SCondition;\n  filter?: QueryFilter | QueryFilterArr | Array<QueryFilter | QueryFilterArr>;\n  or?: QueryFilter | QueryFilterArr | Array<QueryFilter | QueryFilterArr>;\n  join?: QueryJoin | QueryJoinArr | Array<QueryJoin | QueryJoinArr>;\n  sort?: QuerySort | QuerySortArr | Array<QuerySort | QuerySortArr>;\n  limit?: number;\n  offset?: number;\n  page?: number;\n  resetCache?: boolean;\n  includeDeleted?: number;\n  extra?: QueryExtra;\n}\n","import { CreateManyDto } from \"./create-many-dto.interface\";\nimport { CrudRequest } from \"./crud-request.interface\";\nimport { GetManyDefaultResponse } from \"./get-many-default-response.interface\";\n\nimport { CrudService } from \"../services\";\n\nexport interface CrudController<T> {\n  service: CrudService<T>;\n  getManyBase?(req: CrudRequest): Promise<GetManyDefaultResponse<T> | T[]>;\n  getOneBase?(req: CrudRequest): Promise<T>;\n  createOneBase?(req: CrudRequest, dto: T): Promise<T>;\n  createManyBase?(req: CrudRequest, dto: CreateManyDto<T>): Promise<T[]>;\n  updateOneBase?(req: CrudRequest, dto: Partial<T>): Promise<T>;\n  replaceOneBase?(req: CrudRequest, dto: T): Promise<T>;\n  deleteOneBase?(req: CrudRequest): Promise<void | T>;\n  recoverOneBase?(req: CrudRequest): Promise<void | T>;\n}\n","import { RequestQueryBuilderOptions } from \"./request-query-builder-options.interface\";\nimport { AuthGlobalOptions } from \"./auth-options.interface\";\nimport { OperatorsOptions } from \"./operators-options.interface\";\nimport { ParamsOptions } from \"./params-options.interface\";\nimport { RoutesOptions } from \"./routes-options.interface\";\n\nexport interface CrudGlobalConfig {\n  queryParser?: RequestQueryBuilderOptions;\n  auth?: AuthGlobalOptions;\n  routes?: RoutesOptions;\n  params?: ParamsOptions;\n  operators?: OperatorsOptions;\n  query?: {\n    limit?: number;\n    maxLimit?: number;\n    cache?: number | false;\n    alwaysPaginate?: boolean;\n    softDelete?: boolean;\n  };\n  serialize?: {\n    getMany?: false;\n    get?: false;\n    create?: false;\n    createMany?: false;\n    update?: false;\n    replace?: false;\n    delete?: false;\n    recover?: false;\n  };\n}\n","import { ValidationPipeOptions } from \"@nestjs/common\";\n\nimport { RoutesFactoryService } from \"../services\";\n\nimport { AuthOptions } from \"./auth-options.interface\";\nimport { DtoOptions } from \"./dto-options.interface\";\nimport { ModelOptions } from \"./model-options.interface\";\nimport { OperatorsOptions } from \"./operators-options.interface\";\nimport { ParamsOptions } from \"./params-options.interface\";\nimport { QueryOptions } from \"./query-options.interface\";\nimport { RoutesOptions } from \"./routes-options.interface\";\nimport { SerializeOptions } from \"./serialize-options.interface\";\n\nexport interface CrudRequestOptions {\n  query?: QueryOptions;\n  routes?: RoutesOptions;\n  params?: ParamsOptions;\n  operators?: OperatorsOptions;\n}\n\nexport interface CrudOptions {\n  model: ModelOptions;\n  dto?: DtoOptions;\n  serialize?: SerializeOptions;\n  query?: QueryOptions;\n  routes?: RoutesOptions;\n  routesFactory?: typeof RoutesFactoryService;\n  params?: ParamsOptions;\n  validation?: ValidationPipeOptions | false;\n  operators?: OperatorsOptions;\n  swagger?: SwaggerOptions;\n}\n\nexport interface MergedCrudOptions extends CrudOptions {\n  auth?: AuthOptions;\n}\n\nexport interface SwaggerOptions {\n  enabled: boolean | true;\n}","import { ParsedRequestParams } from \"./parsed-request.interface\";\nimport { CrudRequestOptions } from \"./crud-options.interface\";\n\nexport interface CrudRequest {\n  parsed: ParsedRequestParams;\n  options: CrudRequestOptions;\n  /** authenticated user's from request */\n  auth?: {};\n}\n","export interface DtoOptions {\n  create?: any;\n  update?: any;\n  replace?: any;\n}\n","export interface GetManyDefaultResponse<T> {\n  data: T[];\n  count: number;\n  total: number;\n  page: number;\n  pageCount: number;\n}\n","export interface ModelOptions {\n  type: any;\n}\n","export interface OperatorsOptions {\n  custom?: CustomOperators;\n}\n\nexport type CustomOperatorQuery = (field: string, param: string) => string;\n\nexport interface CustomOperators {\n  [key: string]: {\n    query: CustomOperatorQuery;\n    params?: { [field: string]: any };\n    isArray?: boolean;\n  };\n}\n","import { ParamOptionType } from \"../types\";\n\nexport interface ParamsOptions {\n  [key: string]: ParamOption;\n}\n\nexport interface ParamOption {\n  field?: string;\n  type?: ParamOptionType;\n  primary?: boolean;\n  disabled?: boolean;\n  enum?: [];\n}\n","import { ClassTransformOptions } from \"class-transformer\";\nimport {\n  QueryFields,\n  QueryFilter,\n  QueryJoin,\n  QuerySort,\n  SCondition,\n  ObjectLiteral,\n} from \"../types\";\n\nexport interface ParsedRequestParams {\n  fields: QueryFields;\n  paramsFilter: (QueryFilter | undefined)[];\n  authPersist: ObjectLiteral | undefined;\n  classTransformOptions: ClassTransformOptions | undefined;\n  search: SCondition | undefined;\n  filter: QueryFilter[];\n  or: QueryFilter[];\n  join: QueryJoin[];\n  sort: QuerySort[];\n  limit: number | undefined;\n  offset: number | undefined;\n  page: number | undefined;\n  cache: number | undefined;\n  includeDeleted: number | undefined;\n  /**\n   * Extra options.\n   *\n   * Custom extra option come from Request and can be used anywhere you want for your business rules.\n   * CrudRequest lib. do not evaluate this attribute.\n   */\n  extra: ObjectLiteral | undefined;\n}\n","import { QueryFields, QuerySort, QueryFilterOption } from \"../types\";\n\nexport interface QueryOptions {\n  allow?: QueryFields;\n  exclude?: QueryFields;\n  persist?: QueryFields;\n  filter?: QueryFilterOption;\n  join?: JoinOptions;\n  sort?: QuerySort[];\n  limit?: number;\n  maxLimit?: number;\n  cache?: number | false;\n  alwaysPaginate?: boolean;\n  softDelete?: boolean;\n}\n\nexport interface JoinOptions {\n  [key: string]: JoinOption;\n}\n\nexport interface JoinOption {\n  alias?: string;\n  allow?: QueryFields;\n  eager?: boolean;\n  exclude?: QueryFields;\n  persist?: QueryFields;\n  select?: boolean;\n  required?: boolean;\n}\n","export interface ParamsNamesMap {\n  fields?: string | string[];\n  search?: string | string[];\n  filter?: string | string[];\n  or?: string | string[];\n  join?: string | string[];\n  sort?: string | string[];\n  limit?: string | string[];\n  offset?: string | string[];\n  page?: string | string[];\n  cache?: string | string[];\n  includeDeleted?: string | string[];\n  extra?: string | string[];\n}\nexport interface RequestQueryBuilderOptions {\n  delim: string;\n  delimStr: string;\n  paramNamesMap?: ParamsNamesMap;\n}\n","import { BaseRouteName } from \"../types\";\n\nexport interface RoutesOptions {\n  exclude?: BaseRouteName[];\n  only?: BaseRouteName[];\n  getManyBase?: GetManyRouteOptions;\n  getOneBase?: GetOneRouteOptions;\n  createOneBase?: CreateOneRouteOptions;\n  createManyBase?: CreateManyRouteOptions;\n  updateOneBase?: UpdateOneRouteOptions;\n  replaceOneBase?: ReplaceOneRouteOptions;\n  deleteOneBase?: DeleteOneRouteOptions;\n  recoverOneBase?: RecoverOneRouteOptions;\n}\n\nexport interface BaseRouteOptions {\n  interceptors?: any[];\n  decorators?: (PropertyDecorator | MethodDecorator)[];\n}\n\nexport interface GetManyRouteOptions extends BaseRouteOptions {}\n\nexport interface GetOneRouteOptions extends BaseRouteOptions {}\n\nexport interface CreateOneRouteOptions extends BaseRouteOptions {\n  returnShallow?: boolean;\n}\n\nexport interface CreateManyRouteOptions extends BaseRouteOptions {}\n\nexport interface ReplaceOneRouteOptions extends BaseRouteOptions {\n  allowParamsOverride?: boolean;\n  returnShallow?: boolean;\n}\n\nexport interface UpdateOneRouteOptions extends BaseRouteOptions {\n  allowParamsOverride?: boolean;\n  returnShallow?: boolean;\n}\n\nexport interface DeleteOneRouteOptions extends BaseRouteOptions {\n  returnDeleted?: boolean;\n}\n\nexport interface RecoverOneRouteOptions extends BaseRouteOptions {\n  returnRecovered?: boolean;\n}\n","import { Type } from \"@nestjs/common\";\n\nexport interface SerializeOptions {\n  getMany?: Type<any> | false;\n  get?: Type<any> | false;\n  create?: Type<any> | false;\n  createMany?: Type<any> | false;\n  update?: Type<any> | false;\n  replace?: Type<any> | false;\n  delete?: Type<any> | false;\n  recover?: Type<any> | false;\n}\n","module.exports = require(\"@nestjs/core\");","import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { IsEmailUserAlreadyExistConstraint } from \"./user-email-already-exists.constraint\";\nimport { UserController } from \"./user.controller\";\nimport { User } from \"./user.entity\";\nimport { UserService } from \"./user.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [UserService, IsEmailUserAlreadyExistConstraint],\n  exports: [UserService, IsEmailUserAlreadyExistConstraint],\n})\nexport class UserModule {}\n","module.exports = require(\"@nestjs/typeorm\");","/* eslint-disable @typescript-eslint/no-explicit-any, import/named */\nimport { Injectable } from \"@nestjs/common\";\nimport {\n  registerDecorator,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from \"class-validator\";\n\nimport { UserService } from \"./user.service\";\n\n@ValidatorConstraint({ name: \"isEmailUserAlreadyExist\", async: true })\n@Injectable()\nexport class IsEmailUserAlreadyExistConstraint\n  implements ValidatorConstraintInterface\n{\n  constructor(protected readonly userService: UserService) {}\n\n  async validate(text: string) {\n    return !(await this.userService.userExists({ email: text }));\n  }\n}\n\nexport function IsEmailUserAlreadyExist(validationOptions?: ValidationOptions) {\n  return function (object: any, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [],\n      validator: IsEmailUserAlreadyExistConstraint,\n    });\n  };\n}\n","import { TypeOrmCrudService } from \"@2amtech/crudx\";\nimport { Catch, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ValidationError } from \"class-validator\";\nimport { EntityNotFoundError, QueryFailedError } from \"typeorm\";\n\nimport { UserDto } from \"./user.dto\";\nimport { User } from \"./user.entity\";\n\n@Injectable()\n@Catch(QueryFailedError, ValidationError, EntityNotFoundError)\nexport class UserService extends TypeOrmCrudService<User> {\n  constructor(@InjectRepository(User) readonly repo) {\n    super(repo);\n  }\n\n  async userExists(dto: Partial<UserDto>): Promise<boolean> {\n    const user: User = await this.repo.findOneBy(dto);\n    return Boolean(user);\n  }\n}\n","import * as bcrypt from \"bcryptjs\";\nimport { Exclude } from \"class-transformer\";\nimport {\n  AfterLoad,\n  BaseEntity,\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\n\nimport { Address } from \"../address/address.entity\";\nimport { Contract } from \"../contract/contract.entity\";\nimport { Phone } from \"../phone/phone.entity\";\n\n@Entity()\nexport class User extends BaseEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id: string;\n\n  @Column({ unique: true, length: 125 })\n  email: string;\n\n  @Column({ type: \"timestamp\", nullable: true })\n  emailConfirmedAt: Date;\n\n  @Column({ type: \"varchar\", nullable: true })\n  @Exclude()\n  emailToken: string;\n\n  @Column({ type: \"varchar\", length: 80 })\n  @Exclude({ toClassOnly: false, toPlainOnly: true })\n  password: string;\n\n  @CreateDateColumn({ type: \"timestamp\" })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: \"timestamp\" })\n  updatedAt: Date;\n\n  @OneToMany(() => Phone, (phone) => phone.user, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  phones: Phone[];\n\n  @OneToMany(() => Contract, (contract) => contract.user, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  contracts: Contract[];\n\n  @OneToMany(() => Address, (address) => address.user, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  addresses: Address[];\n\n  @DeleteDateColumn()\n  @Exclude()\n  deletedAt: Date;\n\n  @Exclude()\n  private tempPassword?: string;\n\n  @BeforeInsert()\n  private async hashPassword(): Promise<void> {\n    this.password = await bcrypt.hash(this.password, 10);\n  }\n\n  @AfterLoad()\n  private loadTempPassword(): void {\n    this.tempPassword = this.password;\n  }\n\n  @BeforeUpdate()\n  private async encryptPassword(): Promise<void> {\n    if (this.tempPassword !== null && this.tempPassword !== this.password) {\n      try {\n        await this.hashPassword();\n        // After changed, temp password should be reassigned to new one, so if we try to save again,\n        // it does not change the password wrongly\n        this.tempPassword = this.password;\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new Error(\"Unable to encrypt password: \" + error.message);\n        }\n      }\n    }\n  }\n}\n","module.exports = require(\"bcryptjs\");","import {\n  BaseEntity,\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { UUID } from \"typeorm/driver/mongodb/bson.typings\";\n\nimport { User } from \"../user/user.entity\";\n\nimport { AddressType } from \"./address-type.entity\";\n\n@Entity()\nexport class Address extends BaseEntity {\n  @PrimaryGeneratedColumn(\"uuid\")\n  id: number;\n\n  @Column({ type: \"varchar\", nullable: false })\n  street: string;\n\n  @Column({ type: \"int\", nullable: true })\n  number: number;\n\n  @Column({ type: \"varchar\", nullable: false })\n  city: string;\n\n  @Column({ type: \"varchar\", nullable: false, length: 2 })\n  state: string;\n\n  @Column({ name: \"user_id\", type: \"varchar\", nullable: false })\n  userId: UUID;\n\n  @Column({ name: \"is_active\", type: \"boolean\", default: true })\n  isActive: boolean;\n\n  @Column({ name: \"type_id\", type: \"int\", nullable: false })\n  typeId: number;\n\n  @ManyToOne(() => User, (user) => user.id)\n  @JoinColumn({\n    name: \"user_id\",\n    referencedColumnName: \"id\",\n    foreignKeyConstraintName: \"address_user\",\n  })\n  user: User;\n\n  @ManyToOne(() => AddressType, (addressType) => addressType.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn({\n    name: \"type_id\",\n    referencedColumnName: \"id\",\n    foreignKeyConstraintName: \"address_addresstype\",\n  })\n  type: AddressType;\n}\n","module.exports = require(\"typeorm/driver/mongodb/bson.typings\");","import {\n  BaseEntity,\n  Column,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\n\nimport { Address } from \"./address.entity\";\n\n@Entity()\nexport class AddressType extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: \"varchar\", nullable: false })\n  type: string;\n\n  @Column({ name: \"is_active\", type: \"boolean\", default: true })\n  isActive: boolean;\n\n  @OneToMany(() => Address, (address) => address.type)\n  address: Address;\n}\n","import { CrudValidationGroups } from \"@2amtech/crudx\";\nimport { Exclude } from \"class-transformer\";\nimport {\n  IsDateString,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n} from \"class-validator\";\nimport {\n  BaseEntity,\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\n\nimport { User } from \"../user/user.entity\";\n\nconst { CREATE, UPDATE } = CrudValidationGroups;\n\n@Entity()\nexport class Contract extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ name: \"userId\" })\n  @Exclude({ toPlainOnly: true })\n  userId: string;\n\n  @MaxLength(60)\n  @Column({ name: \"contractNumber\", type: \"varchar\", length: 60 })\n  contractNumber: string;\n\n  @IsNotEmpty()\n  @IsDateString()\n  @Column({ name: \"startedAt\", type: \"date\" })\n  startedAt: Date;\n\n  @Column({ name: \"note\", type: \"varchar\", length: \"11\", default: \"\" })\n  @IsOptional({ groups: [UPDATE] })\n  @IsString()\n  note: string;\n\n  @ManyToOne((type) => User, (user) => user.id)\n  @JoinColumn({\n    referencedColumnName: \"id\",\n    foreignKeyConstraintName: \"contact_user\",\n  })\n  user: User;\n}\n","import { Exclude } from \"class-transformer\";\nimport {\n  BaseEntity,\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\n\nimport { User } from \"../user/user.entity\";\n\n@Entity()\nexport class Phone extends BaseEntity {\n  @Exclude()\n  @PrimaryGeneratedColumn(\"uuid\")\n  id: string;\n\n  @Exclude({ toPlainOnly: true })\n  @Column({ type: \"varchar\", nullable: false })\n  userId: string;\n\n  @Column({ type: \"varchar\", nullable: false })\n  phoneNumber: string;\n\n  @ManyToOne((type) => User, (user) => user.id)\n  @JoinColumn({\n    referencedColumnName: \"id\",\n    foreignKeyConstraintName: \"UserId\",\n  })\n  user: User;\n}\n","import {\n  Crud,\n  CrudController,\n  CrudRequest,\n  CrudRequestInterceptor,\n  ParsedRequest,\n} from \"@2amtech/crudx\";\nimport { Controller, Get, UseInterceptors } from \"@nestjs/common\";\n\nimport { UserDto } from \"./user.dto\";\nimport { User } from \"./user.entity\";\nimport { UserService } from \"./user.service\";\n\n@Crud({\n  model: {\n    type: User,\n  },\n  dto: {\n    create: UserDto,\n    update: UserDto,\n  },\n  params: {\n    id: {\n      type: \"uuid\",\n      field: \"id\",\n      primary: true,\n    },\n  },\n})\n@Controller(\"users\")\nexport class UserController implements CrudController<User> {\n  constructor(public service: UserService) {}\n\n  get base(): CrudController<User> {\n    return this;\n  }\n\n  @UseInterceptors(CrudRequestInterceptor)\n  @Get(\"/emails\")\n  async emails(@ParsedRequest() req: CrudRequest) {\n    return this.service.find({ select: [\"email\"] });\n  }\n}\n","import { CrudValidationGroups } from \"@2amtech/crudx\";\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n  ValidateIf,\n} from \"class-validator\";\nimport { isEmpty } from \"lodash\";\n\nimport { PhoneDto } from \"../phone/phone.dto\";\n\nimport { IsEmailUserAlreadyExist } from \"./user-email-already-exists.constraint\";\n\nconst { CREATE } = CrudValidationGroups;\n\nexport class UserDto {\n  @ValidateIf((o) => !isEmpty(o.email))\n  @IsEmail()\n  @IsEmailUserAlreadyExist({\n    message: \"Email already exists\",\n    groups: [CREATE],\n  })\n  email: string;\n\n  @ValidateIf((o) => !isEmpty(o.email))\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(32, { message: \"Password is too long\" })\n  @MinLength(8, {\n    message: \"Password must be at least 8 characters long\",\n  })\n  password: string;\n\n  phone: PhoneDto | [];\n}\n","import { Module } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { TypeOrmModule, TypeOrmModuleOptions } from \"@nestjs/typeorm\";\n\nimport { databaseConfig } from \"../config\";\n\nimport { AddressModule } from \"./address/address.module\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { ClaimModule } from \"./claims/claim.module\";\nimport { ContractModule } from \"./contract/contract.module\";\nimport { PhoneModule } from \"./phone/phone.module\";\nimport { UserModule } from \"./user/user.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [databaseConfig],\n      envFilePath: ['.env.testing']\n    }),\n    TypeOrmModule.forRootAsync({\n      useFactory: (config: ConfigService) =>\n        <TypeOrmModuleOptions>{\n          type: config.get<string>(\"database.type\"),\n          host: config.get<string>(\"database.host\"),\n          port: config.get<number>(\"database.port\"),\n          username: config.get<string>(\"database.username\"),\n          password: config.get<string>(\"database.password\"),\n          database: config.get<string>(\"database.database\"),\n          entities: config.get<string[]>(\"database.entities\"),\n          synchronize: config.get<boolean>(\"database.synchronize\"),\n        },\n      inject: [ConfigService],\n    }),\n    UserModule,\n    PhoneModule,\n    AuthModule,\n    ContractModule,\n    ClaimModule,\n    AddressModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","module.exports = require(\"@nestjs/config\");","export * from \"./database.config\";\n","import { registerAs } from \"@nestjs/config\";\n\nimport { AddressType } from \"../app/address/address-type.entity\";\nimport { Address } from \"../app/address/address.entity\";\nimport { Claim } from \"../app/claims/claim.entity\";\nimport { Contract } from \"../app/contract/contract.entity\";\nimport { Phone } from \"../app/phone/phone.entity\";\nimport { User } from \"../app/user/user.entity\";\n\nexport const databaseConfig = registerAs(\"database\", () => ({\n  type: process.env.DB_TYPE,\n  host: process.env.DB_HOST,\n  port: process.env.DB_PORT,\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE,\n  entities: [User, Phone, Contract, Claim, Address, AddressType],\n  synchronize: true,\n  autoLoadEntities: true,\n  encoding: process.env.DB_CHARSET,\n}));\n","import {\n  BaseEntity,\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\n\nimport { Contract } from \"../contract/contract.entity\";\n\n@Entity()\nexport class Claim extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ name: \"amount\", type: \"double\" })\n  amount: number;\n\n  @Column({ name: \"date\", type: \"date\" })\n  date: Date;\n\n  @Column({ name: \"contractId\", type: \"int\" })\n  contractId: number;\n\n  @ManyToOne((type) => Contract, (contract) => contract.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn({\n    referencedColumnName: \"id\",\n    name: \"contractId\",\n  })\n  contract: Contract;\n}\n","import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { AddressType } from \"./address-type.entity\";\nimport { AddressTypeService } from \"./address-type.service\";\nimport { AddressController } from \"./address.controller\";\nimport { Address } from \"./address.entity\";\nimport { AddressService } from \"./address.service\";\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Address]),\n    TypeOrmModule.forFeature([AddressType]),\n  ],\n  controllers: [AddressController],\n  providers: [AddressService, AddressTypeService],\n  exports: [AddressService, AddressTypeService],\n})\nexport class AddressModule {}\n","import { TypeOrmCrudService } from \"@2amtech/crudx\";\nimport { Catch, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ValidationError } from \"class-validator\";\nimport { EntityNotFoundError, QueryFailedError } from \"typeorm\";\n\nimport { AddressType } from \"./address-type.entity\";\n\n@Injectable()\n@Catch(QueryFailedError, ValidationError, EntityNotFoundError)\nexport class AddressTypeService extends TypeOrmCrudService<AddressType> {\n  constructor(@InjectRepository(AddressType) readonly repo) {\n    super(repo);\n  }\n}\n","import { Crud, CrudController } from \"@2amtech/crudx\";\nimport { Controller } from \"@nestjs/common\";\n\nimport { Address } from \"./address.entity\";\nimport { AddressService } from \"./address.service\";\n\n@Crud({\n  model: {\n    type: Address,\n  },\n  params: {\n    userId: {\n      type: \"uuid\",\n      field: \"userId\",\n    },\n  },\n  query: {\n    exclude: [\"userId\", \"typeId\"],\n    join: {\n      type: {\n        allow: [\"id\", \"type\"],\n        required: true,\n        eager: true,\n      },\n    },\n    filter: {\n      isActive: {\n        $eq: true,\n      },\n    },\n  },\n})\n@Controller(\"/users/:userId/addresses\")\nexport class AddressController implements CrudController<Address> {\n  constructor(public service: AddressService) {}\n\n  get base(): CrudController<Address> {\n    return this;\n  }\n}\n","import { TypeOrmCrudService } from \"@2amtech/crudx\";\nimport { Catch, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ValidationError } from \"class-validator\";\nimport { EntityNotFoundError, QueryFailedError } from \"typeorm\";\n\nimport { Address } from \"./address.entity\";\n\n@Injectable()\n@Catch(QueryFailedError, ValidationError, EntityNotFoundError)\nexport class AddressService extends TypeOrmCrudService<Address> {\n  constructor(@InjectRepository(Address) readonly repo) {\n    super(repo);\n  }\n}\n","import { Controller, Get } from \"@nestjs/common\";\n\nimport { AppService } from \"./app.service\";\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: \"Hello API\" };\n  }\n}\n","import { Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { User } from \"../user/user.entity\";\nimport { UserModule } from \"../user/user.module\";\nimport { UserService } from \"../user/user.service\";\n\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\nimport { jwtConstants } from \"./constants\";\nimport { MeController } from \"./me.controller\";\n\n@Module({\n  imports: [\n    UserModule,\n    TypeOrmModule.forFeature([User]),\n    JwtModule.register({\n      global: true,\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: \"60s\" },\n    }),\n  ],\n  controllers: [AuthController, MeController],\n  providers: [AuthService, UserService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n","module.exports = require(\"@nestjs/jwt\");","import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Post,\n} from \"@nestjs/common\";\n\nimport { AuthService } from \"./auth.service\";\n\n@Controller(\"auth\")\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @HttpCode(HttpStatus.OK)\n  @Post(\"sign-in\")\n  async signIn(@Body() body: Record<string, any>) {\n    return this.authService.signIn(body.email, body.pass);\n  }\n}\n","import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport * as bcrypt from \"bcryptjs\";\n\nimport { UserService } from \"../user/user.service\";\n\n@Injectable()\nexport class AuthService {\n  constructor(private service: UserService, private jwtService: JwtService) {}\n\n  async signIn(email: string, pass: string): Promise<{ access_token: string }> {\n    const user = await this.service.findOne({ where: { email: email } });\n\n    if (!bcrypt.compareSync(pass, user?.password)) {\n      throw new UnauthorizedException();\n    }\n\n    const payload = { sub: user.id, username: user.email };\n\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n","export const jwtConstants = {\n  secret: \"some well defined secret key\",\n};\n","import { Crud, CrudAuth, CrudController, Feature } from \"@2amtech/crudx\";\nimport { Controller, UseGuards, UseInterceptors } from \"@nestjs/common\";\n\nimport { User } from \"../user/user.entity\";\nimport { UserService } from \"../user/user.service\";\n\nimport { AuthGuard } from \"./auth.guard\";\n\n@Crud({\n  model: {\n    type: User,\n  },\n  routes: {\n    only: [\"getOneBase\"],\n  },\n  params: {\n    id: {\n      primary: true,\n      disabled: true,\n    },\n  },\n})\n@CrudAuth({\n  property: \"user\",\n  filter: (user: any) => ({\n    id: user.sub,\n  }),\n})\n@Controller(\"me\")\n@Feature(\"GetMyInfo\")\n@UseGuards(AuthGuard)\nexport class MeController implements CrudController<User> {\n  constructor(public service: UserService) {}\n\n  get base(): CrudController<User> {\n    return this;\n  }\n}\n","import { getAction, getFeature } from \"@2amtech/crudx\";\nimport {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { JwtService } from \"@nestjs/jwt\";\n\nimport { jwtConstants } from \"./constants\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private jwtService: JwtService, private reflector: Reflector) {}\n\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: jwtConstants.secret,\n      });\n\n      request[\"user\"] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n\n    // up here, it's a simple auth guard with jwt\n\n    //\n\n    const handler = context.getHandler();\n    const controller = context.getClass();\n\n    const feature = getFeature(controller);\n    const action = getAction(handler);\n\n    console.log(`${feature}-${action}`); // e.g \"GetMyInfo-Read-One\"\n    // write custom acl rule\n\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers[\"authorization\"]?.split(\" \") ?? [];\n    return type === \"Bearer\" ? token : undefined;\n  }\n}\n","import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { ClaimController } from \"./claim.controller\";\nimport { Claim } from \"./claim.entity\";\nimport { ClaimService } from \"./claim.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Claim])],\n  providers: [ClaimService],\n  controllers: [ClaimController],\n  exports: [ClaimService],\n})\nexport class ClaimModule {}\n","import { Crud, CrudController } from \"@2amtech/crudx\";\nimport { Controller } from \"@nestjs/common\";\n\nimport { Claim } from \"./claim.entity\";\nimport { ClaimService } from \"./claim.service\";\n\n@Crud({\n  model: {\n    type: Claim,\n  },\n  params: {\n    contractId: {\n      type: \"number\",\n      field: \"contractId\",\n    },\n  },\n  query: {\n    allow: [\"id\", \"amount\", \"date\"],\n    persist: [\"id\"],\n    limit: 5,\n    maxLimit: 5,\n    alwaysPaginate: true,\n    sort: [\n      {\n        field: \"id\",\n        order: \"DESC\",\n      },\n    ],\n    cache: 2000,\n    join: {\n      contract: {\n        eager: true,\n      },\n    },\n  },\n})\n@Controller(\"/contracts/:contractId/claims\")\nexport class ClaimController implements CrudController<Claim> {\n  constructor(public service: ClaimService) {}\n\n  get base(): CrudController<Claim> {\n    return this;\n  }\n}\n","import { TypeOrmCrudService } from \"@2amtech/crudx\";\nimport { Catch, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ValidationError } from \"class-validator\";\nimport { EntityNotFoundError, QueryFailedError } from \"typeorm\";\n\nimport { Claim } from \"./claim.entity\";\n\n@Injectable()\n@Catch(QueryFailedError, ValidationError, EntityNotFoundError)\nexport class ClaimService extends TypeOrmCrudService<Claim> {\n  constructor(@InjectRepository(Claim) readonly repo) {\n    super(repo);\n  }\n}\n","import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { ContractController } from \"./contract.controller\";\nimport { Contract } from \"./contract.entity\";\nimport { ContractService } from \"./contract.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Contract])],\n  providers: [ContractService],\n  controllers: [ContractController],\n  exports: [ContractService],\n})\nexport class ContractModule {}\n","import { Crud, CrudController, SerializeOptions } from \"@2amtech/crudx\";\nimport { Controller, Type } from \"@nestjs/common\";\n\nimport { ContractCreateDto } from \"./contract.create.dto\";\nimport { ContractCreateResponseDto } from \"./contract.create.response.dto\";\nimport { Contract } from \"./contract.entity\";\nimport { ContractService } from \"./contract.service\";\n\n@Crud({\n  model: {\n    type: Contract,\n  },\n  dto: {\n    create: ContractCreateDto,\n  },\n  routes: {\n    exclude: [\"deleteOneBase\"],\n  },\n  params: {\n    userId: {\n      field: \"userId\",\n      type: \"uuid\",\n    },\n  },\n  serialize: <SerializeOptions>{\n    create: ContractCreateResponseDto,\n  },\n})\n@Controller(\"/users/:userId/contracts\")\nexport class ContractController implements CrudController<Contract> {\n  constructor(public service: ContractService) {}\n\n  get base(): CrudController<Contract> {\n    return this;\n  }\n}\n","import { CrudValidationGroups } from \"@2amtech/crudx\";\nimport {\n  IsDateString,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n} from \"class-validator\";\nimport { Column } from \"typeorm\";\n\nconst { CREATE, UPDATE } = CrudValidationGroups;\n\nexport class ContractCreateDto {\n  @MaxLength(60)\n  @Column({ name: \"contractNumber\", type: \"varchar\", length: 60 })\n  contractNumber: string;\n\n  @IsNotEmpty()\n  @IsDateString()\n  @Column({ name: \"startedAt\", type: \"date\" })\n  startedAt: Date;\n\n  @Column({ name: \"note\", type: \"varchar\", length: \"11\", default: \"\" })\n  @IsOptional({ groups: [UPDATE] })\n  @IsString()\n  note: string;\n}\n","import { Exclude } from \"class-transformer\";\n\nexport class ContractCreateResponseDto {\n  readonly id: number;\n\n  @Exclude()\n  readonly userId: string;\n\n  readonly contractNumber: string;\n  readonly startedAt: string;\n  readonly note: string;\n}\n","import { TypeOrmCrudService } from \"@2amtech/crudx\";\nimport { Catch, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ValidationError } from \"class-validator\";\nimport { EntityNotFoundError, QueryFailedError } from \"typeorm\";\n\nimport { Contract } from \"./contract.entity\";\n\n@Injectable()\n@Catch(QueryFailedError, ValidationError, EntityNotFoundError)\nexport class ContractService extends TypeOrmCrudService<Contract> {\n  constructor(@InjectRepository(Contract) readonly repo) {\n    super(repo);\n  }\n}\n","import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { PhoneController } from \"./phone.controller\";\nimport { Phone } from \"./phone.entity\";\nimport { PhoneService } from \"./phone.service\";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Phone])],\n  exports: [PhoneService],\n  providers: [PhoneService],\n  controllers: [PhoneController],\n})\nexport class PhoneModule {}\n","import {\n  CreateManyDto,\n  Crud,\n  CrudController,\n  CrudRequest,\n  GetManyDefaultResponse,\n  Override,\n  ParsedBody,\n  ParsedRequest,\n} from \"@2amtech/crudx\";\nimport { Controller } from \"@nestjs/common\";\n\nimport { PhoneDto } from \"./phone.dto\";\nimport { Phone } from \"./phone.entity\";\nimport { PhoneService } from \"./phone.service\";\n\n@Crud({\n  model: {\n    type: Phone,\n  },\n  dto: {\n    create: PhoneDto,\n    update: PhoneDto,\n  },\n  params: {\n    id: {\n      field: \"id\",\n      type: \"uuid\",\n      primary: true,\n    },\n    userId: {\n      field: \"userId\",\n      type: \"uuid\",\n    },\n  },\n  query: {\n    limit: 25,\n    cache: 2000,\n    alwaysPaginate: true,\n  },\n})\n@Controller(\"/users/:userId/phones\")\nexport class PhoneController implements CrudController<Phone> {\n  constructor(public service: PhoneService) {}\n\n  get base(): CrudController<Phone> {\n    return this;\n  }\n\n  @Override()\n  async createOne(\n    @ParsedRequest() req: CrudRequest,\n    @ParsedBody() dto\n  ): Promise<Phone> {\n    const response = await Promise.resolve(this.base.createOneBase(req, dto));\n\n    response[\"customProp\"] = \"custom added property\";\n\n    return response;\n  }\n\n  @Override()\n  async createMany(\n    @ParsedRequest() req: CrudRequest,\n    @ParsedBody() dto: CreateManyDto<Phone>\n  ): Promise<Phone[]> {\n    const response = await Promise.resolve(this.base.createManyBase(req, dto));\n    response.forEach((res) => {\n      res[\"customProp\"] = \"custom added property\";\n    });\n\n    return response;\n  }\n\n  @Override()\n  async getOne(@ParsedRequest() req: CrudRequest): Promise<Phone> {\n    const response = await Promise.resolve(this.base.getOneBase(req));\n\n    response[\"customProp\"] = \"custom added property\";\n\n    return response;\n  }\n\n  @Override()\n  async getMany(\n    @ParsedRequest() req: CrudRequest\n  ): Promise<GetManyDefaultResponse<Phone> | Phone[]> {\n    const response = <GetManyDefaultResponse<Phone>>(\n      await this.base.getManyBase(req)\n    );\n\n    response.data.forEach((res) => {\n      res[\"customProp\"] = \"custom added property\";\n    });\n\n    return response;\n  }\n}\n","import { CrudValidationGroups } from \"@2amtech/crudx\";\nimport { Exclude, Expose } from \"class-transformer\";\nimport {\n  IsNotEmpty,\n  IsString,\n  ValidateIf,\n  isEmpty,\n  isNotEmpty,\n  isString,\n  isUUID,\n} from \"class-validator\";\n\nconst { CREATE } = CrudValidationGroups;\n\nexport class PhoneDto {\n  @IsNotEmpty()\n  @IsString()\n  @Expose()\n  phoneNumber: string;\n}\n","import { TypeOrmCrudService } from \"@2amtech/crudx\";\nimport { Catch, Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { ValidationError } from \"class-validator\";\nimport { EntityNotFoundError, QueryFailedError } from \"typeorm\";\n\nimport { Phone } from \"./phone.entity\";\n\n@Injectable()\n@Catch(QueryFailedError, ValidationError, EntityNotFoundError)\nexport class PhoneService extends TypeOrmCrudService<Phone> {\n  constructor(@InjectRepository(Phone) readonly repo) {\n    super(repo);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\nimport {\n  CrudConfigService,\n  QueryBuilderService,\n  RequestQueryBuilderOptions,\n} from \"@2amtech/crudx\";\nimport { Logger } from \"@nestjs/common\";\nimport { NestFactory } from \"@nestjs/core\";\nimport { useContainer } from \"class-validator\";\n\nimport { UserModule } from \"./app/user/user.module\";\n\n/*\n * Default configuration for CRUD, can be overridden in each module.\n * Must be loaded before importing AppModule.\n */\nCrudConfigService.load({\n  query: {\n    limit: 25,\n    cache: 2000,\n    alwaysPaginate: true,\n  },\n  routes: {\n    updateOneBase: {\n      allowParamsOverride: true,\n    },\n    deleteOneBase: {\n      returnDeleted: true,\n    },\n  },\n});\n\nQueryBuilderService.setOptions(<RequestQueryBuilderOptions>{\n  paramNamesMap: {\n    search: \"s\",\n    join: [\"join[]\", \"join\", \"include[]\", \"include\"],\n  },\n});\n\nimport { AppModule } from \"./app/app.module\";\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = \"v1\";\n  app.setGlobalPrefix(globalPrefix);\n  app.enableCors();\n  useContainer(app.select(UserModule), { fallbackOnErrors: true });\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}